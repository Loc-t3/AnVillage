[2023-06-03 08:19:56.207] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 08:19:57.879] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 08:19:58.379] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 08:19:58.381] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 08:19:58.404] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 08:19:58.618] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 08:19:58.780] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:19:58.781] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:19:58.782] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:19:59.024] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 08:19:59.031] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:19:59.031] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 08:19:59.032] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 08:19:59.154] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 08:19:59.154] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1264 ms
[2023-06-03 08:19:59.519] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 08:19:59.618] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 08:20:00.642] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:20:00.642] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:20:00.645] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:20:00.646] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:20:00.814] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 08:20:00.883] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 08:20:02.400] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:20:02.435] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 08:20:03.728] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:20:05.000] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:20:05.028] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:20:05.040] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:20:05.121] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 08:20:05.145] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 08:20:05.484] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 08:20:05.484] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 08:20:05.565] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 08:20:05.565] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 08:20:05.756] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:20:05.770] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 08:20:05.770] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 08:20:05.770] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 08:20:05.770] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 08:20:05.770] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 08:20:05.771] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 08:20:05.771] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 08:20:06.043] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 08:20:06.045] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 08:20:06.046] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 08:20:06.049] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685751606048 with initial instances count: 1
[2023-06-03 08:20:06.052] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 08:20:06.053] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685751606053, current=UP, previous=STARTING]
[2023-06-03 08:20:06.055] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 08:20:06.055] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:20:06.074] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 08:20:06.075] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 08:20:06.096] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 08:20:07.351] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:20:08.626] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:20:08.634] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.13 seconds (JVM running for 15.105)
[2023-06-03 08:25:05.775] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:30:05.790] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:35:05.796] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:40:05.801] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:45:05.810] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:50:05.815] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:50:37.866] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 08:50:37.867] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685753437867, current=DOWN, previous=UP]
[2023-06-03 08:50:37.867] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 08:50:37.879] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 08:50:38.139] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 08:50:38.141] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 08:50:38.141] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 08:50:38.158] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 08:50:41.166] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 08:50:41.181] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 08:50:41.189] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 08:50:47.888] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 08:50:49.564] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 08:50:50.051] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 08:50:50.053] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 08:50:50.072] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 08:50:50.280] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 08:50:50.336] [ WARN] org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:  559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: ProceedingJoinPoint is only supported for around advice
[2023-06-03 08:50:50.343] [ INFO] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:  136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2023-06-03 08:50:50.371] [ERROR] org.springframework.boot.SpringApplication                  :  834 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: ProceedingJoinPoint is only supported for around advice
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:241)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:723)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:536)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:402)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1247)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1236)
	at com.mc.userserver.UserServerApplication.main(UserServerApplication.java:15)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: ProceedingJoinPoint is only supported for around advice
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 15 common frames omitted
Caused by: java.lang.IllegalArgumentException: ProceedingJoinPoint is only supported for around advice
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.maybeBindProceedingJoinPoint(AbstractAspectJAdvice.java:414)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.calculateArgumentBindings(AbstractAspectJAdvice.java:388)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:309)
	at org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl.instantiateAdvice(InstantiationModelAwarePointcutAdvisorImpl.java:149)
	at org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl.<init>(InstantiationModelAwarePointcutAdvisorImpl.java:113)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisor(ReflectiveAspectJAdvisorFactory.java:213)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:139)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1145)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:505)
	... 36 common frames omitted
[2023-06-03 08:52:36.261] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 08:52:37.889] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 08:52:38.403] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 08:52:38.405] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 08:52:38.427] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 08:52:38.654] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 08:52:38.822] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:52:38.823] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:52:38.825] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:52:39.051] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 08:52:39.058] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:52:39.058] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 08:52:39.059] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 08:52:39.157] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 08:52:39.157] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1257 ms
[2023-06-03 08:52:39.526] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 08:52:39.632] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 08:52:40.523] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:52:40.524] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:52:40.527] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:52:40.527] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:52:40.694] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 08:52:40.764] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 08:52:42.288] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:52:42.338] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 08:52:43.625] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:52:44.925] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:52:44.959] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:52:44.971] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:52:45.057] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 08:52:45.083] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 08:52:45.417] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 08:52:45.418] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 08:52:45.500] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 08:52:45.500] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 08:52:45.711] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:52:45.729] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 08:52:45.729] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 08:52:45.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 08:52:45.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 08:52:45.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 08:52:45.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 08:52:45.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 08:52:46.006] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 08:52:46.008] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 08:52:46.010] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 08:52:46.013] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685753566012 with initial instances count: 1
[2023-06-03 08:52:46.016] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 08:52:46.017] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685753566017, current=UP, previous=STARTING]
[2023-06-03 08:52:46.019] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 08:52:46.019] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:52:46.040] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 08:52:46.041] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 08:52:46.051] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 08:52:47.279] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:52:48.530] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:52:48.552] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 13.895 seconds (JVM running for 14.652)
[2023-06-03 08:53:33.081] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 08:53:33.081] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 08:53:33.088] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 08:53:33.857] [ INFO] com.mc.userserver.config.AopLog                             :   50 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 08:53:33.857] [ INFO] com.mc.userserver.config.AopLog                             :   51 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 08:53:33.858] [ INFO] com.mc.userserver.config.AopLog                             :   52 - IP地址：127.0.0.1
[2023-06-03 08:53:33.895] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 08:53:34.050] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:34.088] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:34.088] [ INFO] com.alibaba.druid.pool.DruidAbstractDataSource              : 1791 - {dataSource-1} failContinuous is true
[2023-06-03 08:53:34.631] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:35.172] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:35.717] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:36.276] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:36.828] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:37.389] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:37.934] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:38.902] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:39.444] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:40.195] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:40.750] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:41.512] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:42.056] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:42.603] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:45.378] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:45.927] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:46.482] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:47.036] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:47.585] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:48.121] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:48.673] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:49.228] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:49.988] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:50.548] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:52.112] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:52.677] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:53.225] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:53.765] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:54.317] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:54.880] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:55.692] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:56.247] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:56.866] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:57.409] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:57.964] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:58.518] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:59.057] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:53:59.611] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:00.154] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:00.708] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:01.263] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:01.803] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:02.353] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:02.901] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:03.437] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:03.993] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:04.845] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:05.400] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:05.944] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:06.360] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 08:54:06.360] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685753646360, current=DOWN, previous=UP]
[2023-06-03 08:54:06.360] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 08:54:06.371] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 08:54:06.490] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:07.028] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:07.590] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:08.153] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:08.879] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 08:54:08.881] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 08:54:08.882] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 08:54:08.905] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'117.135.127.26' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
[2023-06-03 08:54:09.003] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 08:54:12.011] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 08:54:12.025] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 08:54:12.033] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 08:54:16.742] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 08:54:18.415] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 08:54:18.914] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 08:54:18.916] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 08:54:18.935] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 08:54:19.145] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 08:54:19.306] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:54:19.307] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:54:19.309] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 08:54:19.550] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 08:54:19.557] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:54:19.557] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 08:54:19.557] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 08:54:19.662] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 08:54:19.663] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1229 ms
[2023-06-03 08:54:20.017] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 08:54:20.117] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 08:54:21.079] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:54:21.080] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:54:21.083] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 08:54:21.083] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 08:54:21.255] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 08:54:21.326] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 08:54:22.852] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:54:22.890] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 08:54:24.193] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:54:25.502] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:54:25.528] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:54:25.541] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 08:54:25.621] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 08:54:25.646] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 08:54:25.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 08:54:25.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 08:54:26.067] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 08:54:26.067] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 08:54:26.259] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 08:54:26.272] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 08:54:26.273] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 08:54:26.530] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 08:54:26.533] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 08:54:26.534] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 08:54:26.537] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685753666536 with initial instances count: 2
[2023-06-03 08:54:26.541] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 08:54:26.541] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685753666541, current=UP, previous=STARTING]
[2023-06-03 08:54:26.543] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 08:54:26.543] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 08:54:26.563] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 08:54:26.564] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 08:54:26.583] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 08:54:27.847] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:54:29.130] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 08:54:29.152] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.182 seconds (JVM running for 15.123)
[2023-06-03 08:54:42.691] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 08:54:42.691] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 08:54:42.699] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 08:54:43.462] [ INFO] com.mc.userserver.config.AopLog                             :   50 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 08:54:43.463] [ INFO] com.mc.userserver.config.AopLog                             :   51 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 08:54:43.463] [ INFO] com.mc.userserver.config.AopLog                             :   52 - IP地址：127.0.0.1
[2023-06-03 08:54:43.496] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 08:54:43.795] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 08:54:43.799] [ INFO] com.mc.userserver.config.AopLog                             :   56 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 08:54:43.799] [ INFO] com.mc.userserver.config.AopLog                             :   57 - 耗时：347ms
[2023-06-03 08:56:19.366] [ INFO] com.mc.userserver.config.AopLog                             :   50 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 08:56:19.366] [ INFO] com.mc.userserver.config.AopLog                             :   51 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 08:56:19.366] [ INFO] com.mc.userserver.config.AopLog                             :   52 - IP地址：127.0.0.1
[2023-06-03 08:56:29.894] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 08:56:30.206] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 106351
[2023-06-03 08:56:30.872] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 08:56:50.433] [ INFO] com.mc.userserver.config.AopLog                             :   56 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 08:56:50.434] [ INFO] com.mc.userserver.config.AopLog                             :   57 - 耗时：31073ms
[2023-06-03 08:57:15.121] [ INFO] com.mc.userserver.config.AopLog                             :   50 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 08:57:15.121] [ INFO] com.mc.userserver.config.AopLog                             :   51 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 08:57:15.121] [ INFO] com.mc.userserver.config.AopLog                             :   52 - IP地址：127.0.0.1
[2023-06-03 08:57:20.208] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 08:57:20.251] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 08:57:20.253] [ INFO] com.mc.userserver.config.AopLog                             :   56 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 08:57:20.253] [ INFO] com.mc.userserver.config.AopLog                             :   57 - 耗时：5136ms
[2023-06-03 08:59:26.282] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:04:26.288] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:06:05.112] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:06:05.112] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754365112, current=DOWN, previous=UP]
[2023-06-03 09:06:05.112] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:06:05.117] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:06:05.395] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:06:05.397] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:06:05.400] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:06:05.525] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:06:08.534] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:06:08.549] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:06:08.557] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:06:15.062] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:06:16.765] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:06:17.265] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:06:17.267] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:06:17.288] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 09:06:17.508] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:06:17.673] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:06:17.674] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:06:17.675] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:06:17.910] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:06:17.917] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:06:17.917] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:06:17.917] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:06:18.024] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:06:18.024] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1248 ms
[2023-06-03 09:06:18.397] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:06:18.495] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:06:19.534] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:06:19.534] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:06:19.538] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:06:19.538] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:06:19.718] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:06:19.793] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:06:21.340] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:06:21.387] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:06:22.705] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:06:24.006] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:06:24.028] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:06:24.041] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:06:24.118] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:06:24.142] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:06:24.484] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:06:24.484] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:06:24.564] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:06:24.564] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:06:24.753] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:06:24.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:06:24.768] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:06:25.026] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:06:25.028] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:06:25.030] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:06:25.033] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685754385032 with initial instances count: 2
[2023-06-03 09:06:25.036] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:06:25.037] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754385037, current=UP, previous=STARTING]
[2023-06-03 09:06:25.038] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:06:25.038] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:06:25.057] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:06:25.058] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:06:25.079] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:06:26.344] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:06:27.623] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:06:27.633] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.257 seconds (JVM running for 15.206)
[2023-06-03 09:09:58.030] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:09:58.031] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754598031, current=DOWN, previous=UP]
[2023-06-03 09:09:58.031] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:09:58.042] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:09:58.316] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:09:58.318] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:09:58.319] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:09:58.337] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:10:01.348] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:10:01.362] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:10:01.369] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:10:07.963] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:10:09.587] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:10:10.069] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:10:10.071] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:10:10.091] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:10:10.297] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:10:10.468] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:10:10.469] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:10:10.471] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:10:10.707] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:10:10.714] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:10:10.715] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:10:10.715] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:10:10.847] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:10:10.847] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1249 ms
[2023-06-03 09:10:11.207] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:10:11.307] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:10:12.254] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:10:12.254] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:10:12.257] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:10:12.257] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:10:12.443] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:10:12.521] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:10:14.047] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:10:14.082] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:10:15.355] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:10:16.608] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:10:16.636] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:10:16.650] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:10:16.730] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:10:16.755] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:10:17.067] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:10:17.067] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:10:17.147] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:10:17.147] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:10:17.336] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:10:17.349] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:10:17.349] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:10:17.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:10:17.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:10:17.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:10:17.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:10:17.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:10:17.610] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:10:17.613] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:10:17.615] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:10:17.618] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685754617617 with initial instances count: 2
[2023-06-03 09:10:17.622] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:10:17.622] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754617622, current=UP, previous=STARTING]
[2023-06-03 09:10:17.624] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:10:17.624] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:10:17.642] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:10:17.643] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:10:17.662] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:10:18.894] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:10:20.135] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:10:20.162] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 13.832 seconds (JVM running for 14.802)
[2023-06-03 09:11:31.598] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:11:31.598] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:11:31.605] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:11:32.365] [ INFO] com.mc.userserver.config.AopLog                             :   55 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 09:11:32.366] [ INFO] com.mc.userserver.config.AopLog                             :   56 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 09:11:32.366] [ INFO] com.mc.userserver.config.AopLog                             :   57 - IP地址：127.0.0.1
[2023-06-03 09:11:32.400] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:11:32.690] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:11:32.402, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:11:32.691] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:11:32.402, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:11:32.692] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:11:32.694] [ INFO] com.mc.userserver.config.AopLog                             :   61 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 09:11:32.694] [ INFO] com.mc.userserver.config.AopLog                             :   62 - 耗时：1ms
[2023-06-03 09:12:03.519] [ INFO] com.mc.userserver.config.AopLog                             :   55 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 09:12:03.519] [ INFO] com.mc.userserver.config.AopLog                             :   56 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 09:12:03.519] [ INFO] com.mc.userserver.config.AopLog                             :   57 - IP地址：127.0.0.1
[2023-06-03 09:12:03.520] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:12:03.570] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:12:03.570] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:12:03.570] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:12:03.570] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:12:03.570] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:12:03.520, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:12:03.571] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:12:03.572] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:12:03.572] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:12:03.520, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:12:03.572] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:12:03.573] [ INFO] com.mc.userserver.config.AopLog                             :   61 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 09:12:03.573] [ INFO] com.mc.userserver.config.AopLog                             :   62 - 耗时：1ms
[2023-06-03 09:12:10.855] [ INFO] com.mc.userserver.config.AopLog                             :   55 - 调用前：com.mc.userserver.controller.InfoController：alterAddress,传递的参数为：[{"addressId":"0bb9b9d05688499aacfeb07431e0d631","addressInfo":"人民西路1955号","addressWhere":"上海市上海市浦东新区","userId":null,"createTime":null,"updateTime":null,"attribute01":null,"attribute02":null,"attribute03":null,"attribute04":null,"attribute05":null}]
[2023-06-03 09:12:10.855] [ INFO] com.mc.userserver.config.AopLog                             :   56 - URL:http://localhost:10080/info/alterAddress
[2023-06-03 09:12:10.855] [ INFO] com.mc.userserver.config.AopLog                             :   57 - IP地址：127.0.0.1
[2023-06-03 09:12:10.856] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:12:10.893] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:12:10.893] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:12:10.893] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:12:10.893] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:12:10.893] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:12:10.856, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:12:10.894] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:12:10.895] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:12:10.856, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:12:10.895] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:12:10.896] [ INFO] com.mc.userserver.config.AopLog                             :   61 - 调用后：com.mc.userserver.controller.InfoController：alterAddress,返回值为：{"code":1,"msg":"修改成功","data":null,"map":{}}
[2023-06-03 09:12:10.896] [ INFO] com.mc.userserver.config.AopLog                             :   62 - 耗时：1ms
[2023-06-03 09:13:13.481] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:13:13.481] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754793481, current=DOWN, previous=UP]
[2023-06-03 09:13:13.482] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:13:13.489] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:13:13.766] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:13:13.768] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:13:13.772] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:13:13.912] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:13:16.928] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:13:16.942] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:13:16.950] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:13:23.485] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:13:25.165] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:13:25.688] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:13:25.690] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:13:25.710] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:13:25.921] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:13:26.084] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:13:26.085] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:13:26.086] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:13:26.340] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:13:26.347] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:13:26.348] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:13:26.348] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:13:26.459] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:13:26.460] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1283 ms
[2023-06-03 09:13:26.823] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:13:26.923] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:13:27.856] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:13:27.857] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:13:27.860] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:13:27.860] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:13:28.016] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:13:28.083] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:13:29.567] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:13:29.615] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:13:30.909] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:13:32.219] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:13:32.245] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:13:32.257] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:13:32.343] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:13:32.391] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:13:32.764] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:13:32.764] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:13:32.848] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:13:32.849] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:13:33.047] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:13:33.062] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:13:33.062] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:13:33.062] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:13:33.062] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:13:33.062] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:13:33.063] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:13:33.063] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:13:33.334] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:13:33.336] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:13:33.338] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:13:33.341] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685754813340 with initial instances count: 1
[2023-06-03 09:13:33.344] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:13:33.345] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754813345, current=UP, previous=STARTING]
[2023-06-03 09:13:33.347] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:13:33.347] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:13:33.369] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:13:33.370] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:13:33.378] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:13:34.649] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:13:35.952] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:13:35.960] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.197 seconds (JVM running for 15.168)
[2023-06-03 09:13:40.081] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:13:40.081] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:13:40.087] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 09:13:40.838] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:13:41.110] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:13:41.111] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:13:41.111] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:13:41.111] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:13:40.841, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:13:41.113] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:13:41.114] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:13:41.114] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:13:41.114] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:13:40.841, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:13:41.114] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:14:46.884] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:14:46.885] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754886885, current=DOWN, previous=UP]
[2023-06-03 09:14:46.885] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:14:46.892] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:14:47.152] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:14:47.154] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:14:47.158] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:14:47.291] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:14:50.302] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:14:50.317] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:14:50.324] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:14:56.744] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:14:58.432] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:14:58.918] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:14:58.920] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:14:58.940] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:14:59.149] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:14:59.297] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:14:59.298] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:14:59.299] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:14:59.560] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:14:59.567] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:14:59.567] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:14:59.568] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:14:59.679] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:14:59.679] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1237 ms
[2023-06-03 09:15:00.011] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:15:00.101] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:15:01.085] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:15:01.085] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:15:01.088] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:15:01.088] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:15:01.262] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:15:01.327] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:15:02.816] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:02.850] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:15:04.163] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:05.466] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:05.508] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:15:05.520] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:15:05.600] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:15:05.627] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:15:05.991] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:15:05.992] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:15:06.080] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:15:06.081] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:15:06.294] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:15:06.310] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:15:06.310] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:15:06.310] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:15:06.310] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:15:06.310] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:15:06.311] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:15:06.311] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:15:06.613] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:15:06.616] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:15:06.619] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:15:06.622] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685754906621 with initial instances count: 1
[2023-06-03 09:15:06.625] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:15:06.625] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754906625, current=UP, previous=STARTING]
[2023-06-03 09:15:06.627] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:15:06.627] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:15:06.649] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:15:06.650] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:15:06.657] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:15:07.201] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:15:07.201] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:15:07.208] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:15:07.981] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:08.020] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:15:08.584] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:15:08.586] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:15:08.586] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:15:08.587] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:15:08.590] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:15:08.590] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:15:08.023, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:15:08.591] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:15:08.591] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:15:08.592] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:15:08.592] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:15:08.592] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:15:08.593] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:15:08.593] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:15:08.593] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:15:08.023, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:15:08.593] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:15:09.295] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:09.306] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.301 seconds (JVM running for 15.241)
[2023-06-03 09:15:34.418] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:15:34.419] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754934419, current=DOWN, previous=UP]
[2023-06-03 09:15:34.419] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:15:34.446] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:15:34.683] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:15:34.685] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:15:34.690] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:15:34.813] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:15:37.825] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-03 09:15:37.826] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:15:37.841] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:15:37.849] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:15:42.705] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:15:44.411] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:15:44.894] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:15:44.895] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:15:44.915] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:15:45.142] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:15:45.309] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:15:45.310] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:15:45.311] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:15:45.532] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:15:45.538] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:15:45.539] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:15:45.539] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:15:45.643] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:15:45.643] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1220 ms
[2023-06-03 09:15:45.982] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:15:46.083] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:15:47.054] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:15:47.054] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:15:47.057] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:15:47.057] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:15:47.217] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:15:47.285] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:15:48.774] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:48.812] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:15:50.105] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:51.397] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:51.421] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:15:51.433] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:15:51.514] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:15:51.540] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:15:51.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:15:51.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:15:51.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:15:51.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:15:52.174] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:15:52.189] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:15:52.481] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:15:52.483] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:15:52.485] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:15:52.488] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685754952487 with initial instances count: 2
[2023-06-03 09:15:52.490] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:15:52.490] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685754952490, current=UP, previous=STARTING]
[2023-06-03 09:15:52.492] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:15:52.493] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:15:52.514] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:15:52.515] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:15:52.522] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:15:53.794] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:55.102] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:15:55.112] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.144 seconds (JVM running for 15.385)
[2023-06-03 09:16:26.368] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:16:26.368] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:16:26.375] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:16:27.133] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:16:27.410] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:16:27.410] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:16:27.413] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:16:27.413] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:16:27.414] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:16:27.414] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:16:27.135, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:16:27.415] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:16:27.416] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:16:27.416] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:16:27.135, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:16:27.416] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:16:41.804] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:16:41.850] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:17:03.624] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:17:03.626] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:17:03.627] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:17:03.628] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:17:03.629] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:16:41.805, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:17:03.629] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:17:03.629] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:17:03.630] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:17:05.336] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:17:05.337] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:17:05.338] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:17:05.339] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:17:05.340] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:16:41.805, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:17:05.341] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:17:52.661] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:17:52.678] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 70822
[2023-06-03 09:17:52.839] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:17:52.839] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:17:52.661, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:17:52.840] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:17:52.841] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:17:52.841] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:17:52.841] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:17:52.841] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:17:52.661, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:17:52.841] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:17:58.618] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:17:58.618] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755078618, current=DOWN, previous=UP]
[2023-06-03 09:17:58.618] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:17:58.627] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:17:58.873] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:17:58.874] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:17:58.876] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:17:59.003] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:18:02.018] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:18:02.035] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:18:02.042] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:18:08.145] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:18:09.809] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:18:10.301] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:18:10.303] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:18:10.323] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:18:10.536] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:18:10.698] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:18:10.700] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:18:10.701] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:18:10.927] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:18:10.934] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:18:10.934] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:18:10.934] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:18:11.037] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:18:11.037] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1218 ms
[2023-06-03 09:18:11.376] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:18:11.476] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:18:12.449] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:18:12.449] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:18:12.453] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:18:12.453] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:18:12.619] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:18:12.695] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:18:14.179] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:18:14.216] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:18:15.506] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:18:16.785] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:18:16.810] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:18:16.825] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:18:16.920] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:18:16.945] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:18:17.279] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:18:17.279] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:18:17.362] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:18:17.362] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:18:17.580] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:18:17.595] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:18:17.595] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:18:17.595] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:18:17.595] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:18:17.595] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:18:17.596] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:18:17.596] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:18:17.882] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:18:17.884] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:18:17.885] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:18:17.888] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685755097888 with initial instances count: 2
[2023-06-03 09:18:17.891] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:18:17.891] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755097891, current=UP, previous=STARTING]
[2023-06-03 09:18:17.893] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:18:17.893] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:18:17.913] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:18:17.914] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:18:17.921] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:18:19.176] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:18:20.468] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:18:20.479] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 13.978 seconds (JVM running for 14.835)
[2023-06-03 09:18:48.040] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:18:48.040] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:18:48.046] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 09:18:48.758] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:18:49.025] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:18:49.026] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:18:49.028] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:18:49.029] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:18:49.033] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:18:48.761, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:18:49.034] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:18:49.035] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:18:49.035] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:18:49.035] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:18:48.761, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:18:49.035] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:23:17.609] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:23:24.559] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:23:24.559] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755404559, current=DOWN, previous=UP]
[2023-06-03 09:23:24.559] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:23:24.577] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:23:24.818] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:23:24.821] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:23:24.825] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:23:24.956] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:23:27.972] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:23:27.987] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:23:27.995] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:23:34.530] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:23:36.221] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:23:36.729] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:23:36.731] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:23:36.751] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:23:36.971] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:23:37.153] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:23:37.155] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:23:37.156] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:23:37.382] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:23:37.389] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:23:37.390] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:23:37.390] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:23:37.498] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:23:37.499] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1267 ms
[2023-06-03 09:23:37.879] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:23:37.978] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:23:38.955] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:23:38.956] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:23:38.959] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:23:38.959] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:23:39.121] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:23:39.189] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:23:40.733] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:23:40.782] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:23:42.082] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:23:43.383] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:23:43.419] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:23:43.433] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:23:43.539] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:23:43.567] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:23:43.925] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:23:43.925] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:23:44.010] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:23:44.010] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:23:44.220] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:23:44.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:23:44.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:23:44.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:23:44.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:23:44.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:23:44.236] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:23:44.236] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:23:44.535] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:23:44.537] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:23:44.539] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:23:44.542] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685755424541 with initial instances count: 1
[2023-06-03 09:23:44.545] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:23:44.545] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755424545, current=UP, previous=STARTING]
[2023-06-03 09:23:44.547] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:23:44.547] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:23:44.566] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:23:44.567] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:23:44.580] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:23:45.880] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:23:47.184] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:23:47.209] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.39 seconds (JVM running for 15.507)
[2023-06-03 09:23:52.341] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:23:52.341] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:23:52.348] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:23:53.148] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:23:53.442] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:23:53.442] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:23:53.442] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:23:53.443] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:23:53.444] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:23:53.444] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:23:53.151, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:23:53.444] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:23:53.444] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:23:53.444] [ INFO] com.mc.userserver.config.AopLog                             :   70 - <=====================================================
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   71 - 请求来源： =》127.0.0.1
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求方式：POST
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:23:53.151, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:23:53.445] [ INFO] com.mc.userserver.config.AopLog                             :   76 - ------------------------------------------------------
[2023-06-03 09:24:05.582] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 09:24:05.869] [ INFO] com.mc.userserver.controller.InfoController                 :  149 - 用户48ee4db484634b5d93838b06cc9510e8新增地址成功
[2023-06-03 09:26:37.394] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:26:37.394] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755597394, current=DOWN, previous=UP]
[2023-06-03 09:26:37.394] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:26:37.407] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:26:37.703] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:26:37.705] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:26:37.710] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:26:37.842] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:26:40.854] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:26:40.870] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:26:40.880] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:26:47.309] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:26:49.000] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:26:49.506] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:26:49.507] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:26:49.530] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 09:26:49.741] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:26:49.906] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:26:49.907] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:26:49.909] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:26:50.139] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:26:50.146] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:26:50.146] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:26:50.146] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:26:50.250] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:26:50.250] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1239 ms
[2023-06-03 09:26:50.595] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:26:50.696] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:26:51.660] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:26:51.660] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:26:51.663] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:26:51.663] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:26:51.825] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:26:51.892] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:26:53.396] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:26:53.430] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:26:54.780] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:26:56.074] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:26:56.104] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:26:56.131] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:26:56.217] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:26:56.255] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:26:56.598] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:26:56.598] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:26:56.682] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:26:56.682] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:26:56.878] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:26:56.892] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:26:56.892] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:26:56.892] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:26:56.893] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:26:56.893] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:26:56.893] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:26:56.893] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:26:57.181] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:26:57.184] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:26:57.186] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:26:57.189] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685755617188 with initial instances count: 2
[2023-06-03 09:26:57.192] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:26:57.192] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755617192, current=UP, previous=STARTING]
[2023-06-03 09:26:57.194] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:26:57.194] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:26:57.213] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:26:57.213] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:26:57.231] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:26:58.500] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:26:59.808] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:26:59.815] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.203 seconds (JVM running for 15.152)
[2023-06-03 09:27:23.028] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:27:23.028] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:27:23.035] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:27:26.040] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:27:26.354] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：2
[2023-06-03 09:27:26.355] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：true
[2023-06-03 09:27:26.355] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:27:26.356] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:27:26.357] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:27:26.359] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:27:26.360] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:27:26.364] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:27:26.365] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:27:26.043, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:27:26.366] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:27:26.366] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:27:26.386] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：20
[2023-06-03 09:27:26.386] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 09:27:26.386] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:27:26.043, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:27:26.387] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:28:01.690] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:28:01.734] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：0
[2023-06-03 09:28:01.734] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：true
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:28:01.735] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:28:01.690, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：0
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:28:01.736] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:28:01.737] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:28:01.737] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:28:01.737] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:28:01.737] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T09:28:01.690, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:28:01.737] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:30:37.091] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:30:37.091] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755837091, current=DOWN, previous=UP]
[2023-06-03 09:30:37.091] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:30:37.103] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:30:37.375] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:30:37.377] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:30:37.382] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:30:37.507] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:30:40.526] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:30:40.542] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:30:40.550] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:30:47.388] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:30:49.094] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:30:49.612] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:30:49.615] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:30:49.638] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 09:30:49.857] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:30:50.020] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:30:50.021] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:30:50.022] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:30:50.253] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:30:50.262] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:30:50.263] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:30:50.263] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:30:50.381] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:30:50.381] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1276 ms
[2023-06-03 09:30:50.722] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:30:50.834] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:30:51.927] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:30:51.927] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:30:51.931] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:30:51.931] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:30:52.089] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:30:52.157] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:30:53.674] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:30:53.710] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:30:55.010] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:30:56.323] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:30:56.349] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:30:56.363] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:30:56.445] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:30:56.471] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:30:56.857] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:30:56.858] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:30:56.948] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:30:56.948] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:30:57.164] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:30:57.179] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:30:57.179] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:30:57.179] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:30:57.179] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:30:57.179] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:30:57.180] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:30:57.180] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:30:57.475] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:30:57.477] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:30:57.479] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:30:57.482] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685755857481 with initial instances count: 2
[2023-06-03 09:30:57.485] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:30:57.485] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755857485, current=UP, previous=STARTING]
[2023-06-03 09:30:57.487] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:30:57.487] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:30:57.510] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:30:57.511] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:30:57.519] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:30:58.840] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:31:00.140] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:31:00.162] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.552 seconds (JVM running for 15.654)
[2023-06-03 09:31:32.966] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:31:32.966] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:31:32.974] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:31:33.703] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:31:33.703] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:31:33.704] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:31:33.704] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:31:33.705] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:31:33.706] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=null, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:31:33.706] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:31:33.708] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:31:33.708] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:31:33.708] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:31:33.708] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:31:33.708] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:31:33.709] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=null, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:31:33.709] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:31:33.741] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:31:34.747] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：1038
[2023-06-03 09:31:34.747] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：true
[2023-06-03 09:31:34.748] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:31:34.748] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:31:34.773] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：1064
[2023-06-03 09:31:34.773] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 09:31:34.774] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:32:30.744] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:32:30.744] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755950744, current=DOWN, previous=UP]
[2023-06-03 09:32:30.744] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:32:30.756] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:32:31.485] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:32:31.488] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:32:31.496] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:32:31.645] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:32:34.646] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:32:34.662] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:32:34.669] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:32:41.359] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:32:43.028] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:32:43.536] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:32:43.537] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:32:43.558] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 09:32:43.772] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=0f35bd5f-f856-3348-8edc-58575f33fcdc
[2023-06-03 09:32:43.956] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:32:43.957] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:32:43.958] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:32:44.192] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:32:44.200] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:32:44.201] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:32:44.202] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:32:44.305] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:32:44.305] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1266 ms
[2023-06-03 09:32:44.648] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:32:44.748] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:32:45.641] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:32:45.641] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:32:45.644] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:32:45.645] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:32:45.808] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:32:45.878] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:32:47.334] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:32:47.371] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:32:48.637] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:32:49.893] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:32:49.920] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:32:49.938] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:32:50.024] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:32:50.071] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:32:50.533] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:32:50.534] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:32:50.629] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:32:50.629] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:32:50.865] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:32:50.879] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:32:50.879] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:32:50.879] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:32:50.880] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:32:50.880] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:32:50.880] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:32:50.880] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:32:51.160] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:32:51.163] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:32:51.165] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:32:51.169] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685755971168 with initial instances count: 2
[2023-06-03 09:32:51.171] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:32:51.172] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685755971172, current=UP, previous=STARTING]
[2023-06-03 09:32:51.173] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:32:51.175] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:32:51.195] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:32:51.197] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:32:51.205] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:32:52.503] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:32:53.825] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:32:53.841] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.197 seconds (JVM running for 15.173)
[2023-06-03 09:32:57.353] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:32:57.353] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:32:57.360] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:32:58.087] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:32:58.087] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:32:58.088] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:32:58.088] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:32:58.089] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 09:32:58.089] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=null, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:32:58.090] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   71 - <=====================================================
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   72 - 请求来源： =》127.0.0.1
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   73 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   74 - 请求方式：POST
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   75 - 响应方法：com.mc.userserver.service.impl.UserAddressServiceImpl.alterAddress
[2023-06-03 09:32:58.092] [ INFO] com.mc.userserver.config.AopLog                             :   76 - 请求参数：[UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=null, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)]
[2023-06-03 09:32:58.093] [ INFO] com.mc.userserver.config.AopLog                             :   77 - ------------------------------------------------------
[2023-06-03 09:32:58.125] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:32:59.783] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：1690
[2023-06-03 09:32:59.783] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：true
[2023-06-03 09:32:59.783] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:32:59.784] [ INFO] com.mc.userserver.controller.InfoController                 :  164 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 09:32:59.823] [ INFO] com.mc.userserver.config.AopLog                             :   95 - 耗时（毫秒）：1730
[2023-06-03 09:32:59.823] [ INFO] com.mc.userserver.config.AopLog                             :   96 - 返回数据：R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 09:32:59.824] [ INFO] com.mc.userserver.config.AopLog                             :   97 - ==========================================>
[2023-06-03 09:37:50.892] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:42:50.904] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:47:50.917] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:52:50.921] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:54:45.524] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 09:54:45.524] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685757285524, current=DOWN, previous=UP]
[2023-06-03 09:54:45.524] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:54:45.539] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:54:45.836] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:54:45.838] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 09:54:45.842] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 09:54:45.977] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 09:54:48.983] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 09:54:48.999] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 09:54:49.007] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 09:54:57.208] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 09:54:58.967] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 09:54:59.501] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 09:54:59.503] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 09:54:59.524] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 09:54:59.747] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=71030f07-6f63-3f84-8994-ea39b8740568
[2023-06-03 09:54:59.852] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:54:59.853] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:54:59.854] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 09:55:00.062] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 09:55:00.069] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:55:00.070] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 09:55:00.070] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 09:55:00.181] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 09:55:00.181] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1203 ms
[2023-06-03 09:55:00.516] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 09:55:00.604] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 09:55:01.613] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:55:01.614] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:55:01.617] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 09:55:01.617] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 09:55:01.752] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 09:55:01.813] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 09:55:03.270] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:55:03.299] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 09:55:04.598] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:55:05.888] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:55:05.906] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:55:05.915] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 09:55:05.993] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 09:55:06.019] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 09:55:06.383] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 09:55:06.383] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 09:55:06.472] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 09:55:06.473] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 09:55:06.707] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 09:55:06.721] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 09:55:06.721] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 09:55:06.721] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 09:55:06.721] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 09:55:06.722] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 09:55:06.722] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 09:55:06.722] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 09:55:06.843] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 09:55:06.846] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 09:55:06.848] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 09:55:06.852] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685757306851 with initial instances count: 1
[2023-06-03 09:55:06.853] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 09:55:06.854] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685757306854, current=UP, previous=STARTING]
[2023-06-03 09:55:06.856] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 09:55:06.856] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 09:55:07.035] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 09:55:07.036] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 09:55:07.041] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 09:55:08.346] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:55:09.622] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 09:55:09.630] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.225 seconds (JVM running for 15.161)
[2023-06-03 09:55:47.070] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 09:55:47.070] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 09:55:47.077] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 09:55:47.835] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 09:55:48.563] [ INFO] com.mc.userserver.controller.InfoController                 :  166 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:00:06.731] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:05:06.742] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:05:30.766] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:05:30.767] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685757930767, current=DOWN, previous=UP]
[2023-06-03 10:05:30.767] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:05:30.778] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:05:31.042] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:05:31.044] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:05:31.049] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:05:31.174] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:05:34.185] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:05:34.200] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:05:34.208] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:05:41.028] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:05:42.681] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:05:43.189] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:05:43.192] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:05:43.213] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:05:43.427] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:05:43.612] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:05:43.613] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:05:43.615] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:05:43.869] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:05:43.876] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:05:43.876] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:05:43.877] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:05:43.980] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:05:43.980] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1288 ms
[2023-06-03 10:05:44.325] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:05:44.427] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:05:45.357] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:05:45.357] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:05:45.360] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:05:45.361] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:05:45.530] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:05:45.601] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:05:47.094] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:05:47.130] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:05:48.404] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:05:49.671] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:05:49.693] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:05:49.721] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:05:49.805] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:05:49.829] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:05:50.141] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:05:50.142] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:05:50.226] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:05:50.226] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:05:50.419] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:05:50.432] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:05:50.432] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:05:50.432] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:05:50.433] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:05:50.433] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:05:50.433] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:05:50.433] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:05:50.700] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:05:50.702] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:05:50.704] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:05:50.707] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685757950706 with initial instances count: 2
[2023-06-03 10:05:50.711] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:05:50.711] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685757950711, current=UP, previous=STARTING]
[2023-06-03 10:05:50.712] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:05:50.713] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:05:50.733] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:05:50.734] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:05:50.747] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:05:51.991] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:05:53.234] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:05:53.256] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 13.93 seconds (JVM running for 14.893)
[2023-06-03 10:06:00.825] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:06:00.825] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:06:00.833] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 10:06:02.091] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:06:02.429] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:06:02.448] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (20462) '修'] with root cause
java.lang.IllegalStateException: Cannot handle (20462) '修'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:201)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:129)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$2c7086cb.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:06:48.678] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:06:48.679] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758008679, current=DOWN, previous=UP]
[2023-06-03 10:06:48.679] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:06:48.693] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:06:48.957] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:06:48.959] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:06:48.963] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:06:49.087] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:06:52.092] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-03 10:06:52.094] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:06:52.109] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:06:52.119] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:06:58.489] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:07:00.205] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:07:00.970] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:07:00.972] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:07:00.996] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 10:07:01.228] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:07:01.406] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:07:01.407] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:07:01.409] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:07:01.637] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:07:01.645] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:07:01.646] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:07:01.646] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:07:01.751] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:07:01.751] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1529 ms
[2023-06-03 10:07:02.100] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:07:02.201] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:07:03.131] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:07:03.131] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:07:03.135] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:07:03.135] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:07:03.304] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:07:03.374] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:07:04.865] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:07:04.906] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:07:06.207] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:07:07.489] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:07:07.539] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:07:07.553] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:07:07.632] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:07:07.658] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:07:07.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:07:07.985] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:07:08.067] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:07:08.068] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:07:08.262] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:07:08.277] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:07:08.277] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:07:08.277] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:07:08.277] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:07:08.278] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:07:08.278] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:07:08.278] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:07:08.554] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:07:08.556] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:07:08.558] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:07:08.561] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758028560 with initial instances count: 1
[2023-06-03 10:07:08.564] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:07:08.565] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758028565, current=UP, previous=STARTING]
[2023-06-03 10:07:08.566] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:07:08.567] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:07:08.586] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:07:08.588] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:07:08.607] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:07:09.841] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:07:11.122] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:07:11.144] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.364 seconds (JVM running for 15.214)
[2023-06-03 10:07:34.582] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:07:34.582] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:07:34.590] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 10:07:35.609] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:07:37.239] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:07:37.261] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'InfoController' cannot be found on null] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'InfoController' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:85)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:83)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:203)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:129)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$7639f613.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:08:54.266] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:08:54.266] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758134266, current=DOWN, previous=UP]
[2023-06-03 10:08:54.266] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:08:54.283] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:08:54.589] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:08:54.591] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:08:54.596] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:08:54.725] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:08:57.744] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:08:57.759] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:08:57.771] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:09:04.422] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:09:06.111] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:09:06.623] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:09:06.625] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:09:06.646] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:09:06.862] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:09:07.042] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:09:07.044] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:09:07.045] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:09:07.278] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:09:07.285] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:09:07.286] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:09:07.286] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:09:07.394] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:09:07.394] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1272 ms
[2023-06-03 10:09:07.751] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:09:07.855] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:09:08.825] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:09:08.825] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:09:08.829] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:09:08.829] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:09:09.002] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:09:09.073] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:09:10.587] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:09:10.623] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:09:11.927] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:09:13.230] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:09:13.256] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:09:13.271] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:09:13.369] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:09:13.394] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:09:13.742] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:09:13.743] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:09:13.826] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:09:13.826] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:09:14.023] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:09:14.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:09:14.322] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:09:14.324] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:09:14.326] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:09:14.329] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758154328 with initial instances count: 1
[2023-06-03 10:09:14.333] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:09:14.334] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758154333, current=UP, previous=STARTING]
[2023-06-03 10:09:14.336] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:09:14.336] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:09:14.356] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:09:14.357] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:09:14.366] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:09:15.654] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:09:16.937] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:09:16.948] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.317 seconds (JVM running for 15.298)
[2023-06-03 10:09:36.625] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:09:36.625] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:09:36.633] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 10:09:38.049] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:09:38.691] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:09:38.710] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userAddressService' cannot be found on null] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userAddressService' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:85)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:83)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:203)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:129)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$c0545c60.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:10:34.208] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:10:34.208] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758234208, current=DOWN, previous=UP]
[2023-06-03 10:10:34.208] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:10:34.217] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:10:34.507] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:10:34.509] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:10:34.514] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:10:34.638] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:10:43.002] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:10:44.707] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:10:45.235] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:10:45.237] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:10:45.258] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:10:45.478] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:10:45.662] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:10:45.663] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:10:45.665] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:10:45.919] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:10:45.927] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:10:45.927] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:10:45.927] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:10:46.037] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:10:46.038] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1320 ms
[2023-06-03 10:10:46.398] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:10:46.503] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:10:47.506] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:10:47.507] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:10:47.510] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:10:47.511] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:10:47.687] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:10:47.760] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:10:49.294] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:10:49.331] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:10:50.663] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:10:51.977] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:10:51.999] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:10:52.013] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:10:52.094] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:10:52.119] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:10:52.470] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:10:52.471] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:10:52.556] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:10:52.556] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:10:52.768] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:10:52.784] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:10:52.785] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:10:53.059] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:10:53.061] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:10:53.064] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:10:53.067] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758253066 with initial instances count: 2
[2023-06-03 10:10:53.070] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:10:53.070] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758253070, current=UP, previous=STARTING]
[2023-06-03 10:10:53.072] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:10:53.072] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:10:53.093] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:10:53.094] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:10:53.115] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:10:54.425] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:10:55.715] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:10:55.735] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.475 seconds (JVM running for 15.481)
[2023-06-03 10:11:02.851] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:11:02.851] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:11:02.857] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 10:11:06.811] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:11:10.024] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:11:10.051] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userAddressService' cannot be found on null] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userAddressService' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:91)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:55)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:85)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:83)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:203)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:129)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$c1838f24.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:13:00.603] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:13:00.603] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758380603, current=DOWN, previous=UP]
[2023-06-03 10:13:00.604] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:13:00.616] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:13:00.958] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:13:00.960] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:13:00.965] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:13:01.091] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:13:04.108] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:13:04.122] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:13:04.129] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:13:11.277] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:13:12.965] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:13:13.482] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:13:13.484] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:13:13.505] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:13:13.725] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:13:13.906] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:13:13.908] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:13:13.909] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:13:14.145] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:13:14.152] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:13:14.153] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:13:14.153] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:13:14.262] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:13:14.263] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1286 ms
[2023-06-03 10:13:14.621] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:13:14.724] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:13:15.824] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:13:15.825] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:13:15.828] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:13:15.828] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:13:16.003] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:13:16.082] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:13:17.591] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:13:17.629] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:13:18.963] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:13:20.273] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:13:20.297] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:13:20.327] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:13:20.410] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:13:20.437] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:13:20.807] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:13:20.808] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:13:20.897] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:13:20.897] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:13:21.103] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:13:21.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:13:21.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:13:21.427] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:13:21.430] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:13:21.432] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:13:21.435] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758401434 with initial instances count: 2
[2023-06-03 10:13:21.438] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:13:21.438] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758401438, current=UP, previous=STARTING]
[2023-06-03 10:13:21.440] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:13:21.440] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:13:21.460] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:13:21.460] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:13:21.484] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:13:22.771] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:13:24.068] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:13:24.079] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.552 seconds (JVM running for 15.54)
[2023-06-03 10:13:28.979] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:13:28.979] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:13:28.987] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 10:13:30.934] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:13:31.499] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:13:31.509] [ INFO] com.mc.userserver.config.SysLogAspect                       :  152 - com.mc.userserver.controller.InfoController#alterAddress(): 用户: #userAddressTable.getAddressId(): -修改成功, result: R(code=1, msg=修改成功, data=null, map={}), costTime: 608ms
[2023-06-03 10:14:40.487] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:14:40.506] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 69001
[2023-06-03 10:14:42.465] [ INFO] com.mc.userserver.controller.InfoController                 :  167 - 用户0bb9b9d05688499aacfeb07431e0d631修改地址成功
[2023-06-03 10:14:42.465] [ INFO] com.mc.userserver.config.SysLogAspect                       :  152 - com.mc.userserver.controller.InfoController#alterAddress(): 用户: #userAddressTable.getAddressId(): -修改成功, result: R(code=1, msg=修改成功, data=null, map={}), costTime: 1978ms
[2023-06-03 10:14:50.825] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:14:50.825] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758490825, current=DOWN, previous=UP]
[2023-06-03 10:14:50.825] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:14:50.830] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:14:51.142] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:14:51.144] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:14:51.146] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:14:51.274] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:14:54.290] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-03 10:14:54.291] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:14:54.307] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:14:54.315] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:15:01.033] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:15:02.720] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:15:03.226] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:15:03.228] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:15:03.249] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:15:03.461] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:15:03.640] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:03.642] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:03.643] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:03.875] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:15:03.882] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:15:03.883] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:15:03.883] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:15:03.989] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:15:03.990] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1258 ms
[2023-06-03 10:15:04.340] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:15:04.448] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:15:05.494] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:15:05.494] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:15:05.497] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:15:05.498] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:15:05.673] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:15:05.746] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:15:07.273] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:15:07.313] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:15:08.614] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:15:09.907] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:15:09.931] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:15:09.947] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:15:10.034] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:15:10.062] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:15:10.436] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:15:10.436] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:15:10.521] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:15:10.521] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:15:10.719] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:15:10.733] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:15:10.734] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:15:11.000] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:15:11.002] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:15:11.004] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:15:11.007] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758511006 with initial instances count: 1
[2023-06-03 10:15:11.011] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:15:11.011] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758511011, current=UP, previous=STARTING]
[2023-06-03 10:15:11.013] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:15:11.013] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:15:11.032] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:15:11.034] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:15:11.059] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:15:12.341] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:15:13.649] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:15:13.656] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.453 seconds (JVM running for 15.437)
[2023-06-03 10:15:17.612] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:15:17.612] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:15:17.619] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 10:15:18.407] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:15:18.690] [ INFO] com.mc.userserver.config.SysLogAspect                       :  152 - com.mc.userserver.controller.InfoController#alterAddress(): 用户: : 0bb9b9d05688499aacfeb07431e0d631-修改地址成功, result: R(code=1, msg=修改成功, data=null, map={}), costTime: 317ms
[2023-06-03 10:15:45.219] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:15:45.219] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758545219, current=DOWN, previous=UP]
[2023-06-03 10:15:45.219] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:15:45.231] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:15:45.531] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:15:45.533] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:15:45.537] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:15:45.656] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:15:48.666] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:15:48.684] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:15:48.694] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:15:55.461] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:15:57.179] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:15:57.685] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:15:57.687] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:15:57.707] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:15:57.921] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:15:58.102] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:58.103] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:58.107] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:15:58.335] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:15:58.341] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:15:58.342] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:15:58.342] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:15:58.450] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:15:58.451] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1261 ms
[2023-06-03 10:15:58.802] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:15:58.903] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:15:59.892] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:15:59.892] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:15:59.895] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:15:59.895] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:16:00.081] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:16:00.151] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:16:01.662] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:16:01.701] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:16:03.005] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:16:04.266] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:16:04.289] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:16:04.317] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:16:04.401] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:16:04.427] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:16:04.753] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:16:04.753] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:16:04.836] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:16:04.836] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:16:05.033] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:16:05.047] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:16:05.047] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:16:05.047] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:16:05.047] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:16:05.048] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:16:05.048] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:16:05.048] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:16:05.332] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:16:05.334] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:16:05.337] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:16:05.340] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685758565339 with initial instances count: 1
[2023-06-03 10:16:05.343] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:16:05.344] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685758565344, current=UP, previous=STARTING]
[2023-06-03 10:16:05.346] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:16:05.346] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:16:05.364] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:16:05.365] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:16:05.385] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:16:06.611] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:16:07.875] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:16:07.884] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.201 seconds (JVM running for 15.195)
[2023-06-03 10:17:09.442] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:17:09.443] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:17:09.527] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 84 ms
[2023-06-03 10:17:12.350] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:21:15.911] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:25:33.800] [ INFO] org.apache.http.impl.client.DefaultHttpClient               :  690 - I/O exception (java.net.SocketException) caught when processing request to {}->http://127.0.0.1:10023: Software caused connection abort: socket write error
[2023-06-03 10:25:33.801] [ INFO] org.apache.http.impl.client.DefaultHttpClient               :  700 - Retrying request to {}->http://127.0.0.1:10023
[2023-06-03 10:25:33.806] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:25:33.806] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:25:33.807] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-03 10:25:33.807] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:25:33.822] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:26:58.852] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:26:58.852] [ INFO] com.mc.userserver.config.SysLogAspect                       :  152 - com.mc.userserver.controller.InfoController#alterAddress(): 用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功, result: R(code=1, msg=修改成功, data=null, map={}), costTime: 539486ms
[2023-06-03 10:27:28.279] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-03 10:27:28.280] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:27:28.292] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:32:27.128] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:35:22.807] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:35:22.807] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685759722807, current=DOWN, previous=UP]
[2023-06-03 10:35:22.807] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:35:22.826] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:35:23.136] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:35:23.138] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:35:23.143] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:35:23.261] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:35:26.264] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:35:26.280] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:35:26.288] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:35:39.583] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:35:41.386] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:35:42.644] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:35:42.646] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:35:42.668] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 10:35:42.939] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:35:43.873] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:35:43.891] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:35:43.899] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:35:45.824] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:35:45.857] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:35:45.858] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:35:45.859] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:35:46.544] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:35:46.545] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 5141 ms
[2023-06-03 10:36:14.906] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:36:16.892] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:36:19.071] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:36:19.072] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:36:19.076] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:36:19.076] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:36:19.266] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:36:19.340] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:36:20.893] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:36:20.928] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:36:22.260] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:36:23.560] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:36:23.582] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:36:23.596] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:36:23.680] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:36:23.708] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:36:24.064] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:36:24.065] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:36:24.151] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:36:24.152] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:36:24.366] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:36:24.381] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:36:24.381] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:36:24.382] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:36:24.382] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:36:24.382] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:36:24.382] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:36:24.382] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:36:24.629] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:36:24.632] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:36:24.634] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:36:24.636] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685759784636 with initial instances count: 1
[2023-06-03 10:36:24.640] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:36:24.640] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685759784640, current=UP, previous=STARTING]
[2023-06-03 10:36:24.643] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:36:24.643] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:36:24.671] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:36:24.672] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:36:24.680] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:36:26.066] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:36:27.408] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:36:27.416] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 51.0 seconds (JVM running for 52.593)
[2023-06-03 10:36:36.309] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:36:36.310] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:36:36.316] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 10:36:37.204] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:37:58.713] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:37:58.713] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:38:31.814] [ INFO] com.mc.userserver.config.SysLogAspect                       :  165 - <=====================================================
[2023-06-03 10:38:32.937] [ INFO] com.mc.userserver.config.SysLogAspect                       :  166 - 执行描述：{}用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 10:38:33.946] [ INFO] com.mc.userserver.config.SysLogAspect                       :  167 - 请求来源： =》127.0.0.1
[2023-06-03 10:38:35.254] [ INFO] com.mc.userserver.config.SysLogAspect                       :  168 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 10:38:37.817] [ INFO] com.mc.userserver.config.SysLogAspect                       :  169 - 请求方式：POST
[2023-06-03 10:38:39.742] [ INFO] com.mc.userserver.config.SysLogAspect                       :  170 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 10:38:44.951] [ INFO] com.mc.userserver.config.SysLogAspect                       :  171 - 请求参数：{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T10:36:37.207, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 10:38:56.859] [ INFO] com.mc.userserver.config.SysLogAspect                       :  172 - 返回数据：{}R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 10:39:02.783] [ INFO] com.mc.userserver.config.SysLogAspect                       :  173 - costTime: {}ms110152
[2023-06-03 10:41:34.288] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:41:34.288] [ INFO] com.mc.userserver.config.SysLogAspect                       :  174 - ------------------------------------------------------
[2023-06-03 10:41:34.288] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:41:34.289] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:42:12.765] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)] with root cause
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.ExceptionFactory.createTimeoutException(ExceptionFactory.java:51)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:119)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:79)
	at com.sun.proxy.$Proxy156.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:194)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1117)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:495)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$13(DefaultHashOperations.java:245)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:228)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:245)
	at com.mc.userserver.filter.TokenRefreshInterceptor.preHandle(TokenRefreshInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:42:17.772] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] threw exception
io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.ExceptionFactory.createTimeoutException(ExceptionFactory.java:51)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:119)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:79)
	at com.sun.proxy.$Proxy156.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:194)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1117)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:495)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$13(DefaultHashOperations.java:245)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:228)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:245)
	at com.mc.userserver.filter.TokenRefreshInterceptor.preHandle(TokenRefreshInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 10:42:17.773] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost] :  175 - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:710)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:459)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:398)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:257)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:352)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:275)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.convertLettuceAccessException(LettuceHashCommands.java:471)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:196)
	at org.springframework.data.redis.connection.DefaultedRedisConnection.hGetAll(DefaultedRedisConnection.java:1117)
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.hGetAll(DefaultStringRedisConnection.java:495)
	at org.springframework.data.redis.core.DefaultHashOperations.lambda$entries$13(DefaultHashOperations.java:245)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:228)
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188)
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)
	at org.springframework.data.redis.core.DefaultHashOperations.entries(DefaultHashOperations.java:245)
	at com.mc.userserver.filter.TokenRefreshInterceptor.preHandle(TokenRefreshInterceptor.java:45)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:151)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 36 common frames omitted
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.ExceptionFactory.createTimeoutException(ExceptionFactory.java:51)
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:119)
	at io.lettuce.core.FutureSyncInvocationHandler.handleInvocation(FutureSyncInvocationHandler.java:75)
	at io.lettuce.core.internal.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:79)
	at com.sun.proxy.$Proxy156.hgetall(Unknown Source)
	at org.springframework.data.redis.connection.lettuce.LettuceHashCommands.hGetAll(LettuceHashCommands.java:194)
	... 48 common frames omitted
[2023-06-03 10:42:27.043] [ INFO] io.lettuce.core.protocol.ConnectionWatchdog                 :  171 - Reconnecting, last destination was /121.5.151.112:6379
[2023-06-03 10:42:27.064] [ INFO] io.lettuce.core.protocol.ReconnectionHandler                :  194 - Reconnected to 121.5.151.112:6379
[2023-06-03 10:42:38.986] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:43:27.622] [ INFO] com.mc.userserver.config.SysLogAspect                       :  165 - <=====================================================
[2023-06-03 10:43:27.622] [ INFO] com.mc.userserver.config.SysLogAspect                       :  166 - 执行描述：{}用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 10:43:27.622] [ INFO] com.mc.userserver.config.SysLogAspect                       :  167 - 请求来源： =》127.0.0.1
[2023-06-03 10:43:27.622] [ INFO] com.mc.userserver.config.SysLogAspect                       :  168 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 10:43:27.622] [ INFO] com.mc.userserver.config.SysLogAspect                       :  169 - 请求方式：POST
[2023-06-03 10:43:27.623] [ INFO] com.mc.userserver.config.SysLogAspect                       :  170 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 10:43:27.623] [ INFO] com.mc.userserver.config.SysLogAspect                       :  171 - 请求参数：{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T10:42:38.987, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 10:43:27.623] [ INFO] com.mc.userserver.config.SysLogAspect                       :  172 - 返回数据：{}R(code=1, msg=修改成功, data=null, map={})
[2023-06-03 10:43:27.623] [ INFO] com.mc.userserver.config.SysLogAspect                       :  173 - costTime: {}ms48638
[2023-06-03 10:43:27.623] [ INFO] com.mc.userserver.config.SysLogAspect                       :  174 - ------------------------------------------------------
[2023-06-03 10:43:27.648] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 10:43:27.648] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685760207648, current=DOWN, previous=UP]
[2023-06-03 10:43:27.649] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:43:27.652] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:43:27.982] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:43:27.984] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 10:43:27.986] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 10:43:28.109] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 10:43:31.120] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 10:43:31.137] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 10:43:31.143] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 10:43:38.092] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 10:43:39.778] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 10:43:40.296] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 10:43:40.298] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 10:43:40.322] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 10:43:40.542] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 10:43:40.726] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:43:40.728] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:43:40.729] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 10:43:40.961] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 10:43:40.969] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:43:40.969] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 10:43:40.969] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 10:43:41.077] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 10:43:41.077] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1287 ms
[2023-06-03 10:43:41.451] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 10:43:41.554] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 10:43:42.544] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:43:42.544] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:43:42.547] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 10:43:42.548] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 10:43:42.725] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 10:43:42.803] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 10:43:44.317] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:43:44.353] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 10:43:45.669] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:43:46.961] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:43:46.985] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:43:47.001] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 10:43:47.100] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 10:43:47.127] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 10:43:47.482] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 10:43:47.482] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 10:43:47.568] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 10:43:47.568] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 10:43:47.767] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:43:47.781] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 10:43:47.781] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 10:43:47.781] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 10:43:47.782] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 10:43:47.782] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 10:43:47.782] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 10:43:47.782] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 10:43:48.052] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 10:43:48.054] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 10:43:48.056] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 10:43:48.060] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685760228059 with initial instances count: 1
[2023-06-03 10:43:48.063] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 10:43:48.063] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685760228063, current=UP, previous=STARTING]
[2023-06-03 10:43:48.065] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 10:43:48.065] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 10:43:48.085] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 10:43:48.086] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 10:43:48.107] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 10:43:49.380] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:43:50.793] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 10:43:50.801] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.487 seconds (JVM running for 15.531)
[2023-06-03 10:43:57.358] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 10:43:57.358] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 10:43:57.364] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-03 10:43:59.017] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 10:44:29.889] [ INFO] com.mc.userserver.config.SysLogAspect                       :  165 - <=====================================================
[2023-06-03 10:44:30.430] [ INFO] com.mc.userserver.config.SysLogAspect                       :  166 - 请求来源： =》127.0.0.1
[2023-06-03 10:44:30.948] [ INFO] com.mc.userserver.config.SysLogAspect                       :  167 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 10:44:31.524] [ INFO] com.mc.userserver.config.SysLogAspect                       :  168 - 请求方式：POST
[2023-06-03 10:44:32.085] [ INFO] com.mc.userserver.config.SysLogAspect                       :  169 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 10:44:34.877] [ INFO] com.mc.userserver.config.SysLogAspect                       :  170 - 请求参数：{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T10:43:59.020, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 10:44:34.877] [ INFO] com.mc.userserver.config.SysLogAspect                       :  171 - 返回数据：{}R(code=0, msg=修改失败,请重试, data=null, map={})
[2023-06-03 10:44:34.877] [ INFO] com.mc.userserver.config.SysLogAspect                       :  172 - 执行描述：{}用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 10:44:34.877] [ INFO] com.mc.userserver.config.SysLogAspect                       :  174 - costTime: {}ms26203
[2023-06-03 10:44:34.878] [ INFO] com.mc.userserver.config.SysLogAspect                       :  175 - ------------------------------------------------------
[2023-06-03 10:48:47.792] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:53:47.802] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 10:58:47.804] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:03:47.814] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:08:47.826] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:13:47.833] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:18:47.843] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:23:47.853] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:28:47.859] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:30:32.413] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 11:30:32.414] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685763032414, current=DOWN, previous=UP]
[2023-06-03 11:30:32.414] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 11:30:32.438] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 11:30:32.684] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 11:30:32.688] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 11:30:32.690] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 11:30:32.928] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 11:30:48.260] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 11:30:49.949] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 11:30:50.571] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 11:30:50.573] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 11:30:50.594] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 11:30:50.805] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 11:30:50.988] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 11:30:50.989] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 11:30:50.991] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 11:30:51.221] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 11:30:51.228] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 11:30:51.228] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 11:30:51.228] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 11:30:51.333] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 11:30:51.333] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1374 ms
[2023-06-03 11:30:51.683] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 11:30:51.787] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 11:30:52.743] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 11:30:52.743] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 11:30:52.747] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 11:30:52.747] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 11:30:52.917] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 11:30:52.987] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 11:30:54.520] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 11:30:54.556] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 11:30:55.876] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 11:30:57.183] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 11:30:57.214] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 11:30:57.229] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 11:30:57.326] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 11:30:57.352] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 11:30:57.719] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 11:30:57.719] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 11:30:57.803] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 11:30:57.803] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 11:30:57.999] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:30:58.013] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 11:30:58.013] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 11:30:58.013] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 11:30:58.013] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 11:30:58.013] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 11:30:58.014] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 11:30:58.014] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 11:30:58.279] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 11:30:58.282] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 11:30:58.283] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 11:30:58.286] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685763058285 with initial instances count: 2
[2023-06-03 11:30:58.290] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 11:30:58.290] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685763058290, current=UP, previous=STARTING]
[2023-06-03 11:30:58.292] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 11:30:58.292] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 11:30:58.313] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 11:30:58.313] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 11:30:58.321] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 11:30:59.628] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 11:31:00.901] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 11:31:00.911] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.465 seconds (JVM running for 15.519)
[2023-06-03 11:31:36.967] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 11:31:36.967] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 11:31:36.975] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 11:31:38.875] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 11:31:40.864] [ INFO] com.mc.userserver.config.SysLogAspect                       :  165 - <=====================================================
[2023-06-03 11:31:40.865] [ INFO] com.mc.userserver.config.SysLogAspect                       :  166 - 请求来源： =》127.0.0.1
[2023-06-03 11:31:40.865] [ INFO] com.mc.userserver.config.SysLogAspect                       :  167 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 11:31:40.865] [ INFO] com.mc.userserver.config.SysLogAspect                       :  168 - 请求方式：POST
[2023-06-03 11:31:40.865] [ INFO] com.mc.userserver.config.SysLogAspect                       :  169 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 11:31:40.865] [ INFO] com.mc.userserver.config.SysLogAspect                       :  170 - 请求参数：{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T11:31:38.878, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 11:31:40.866] [ INFO] com.mc.userserver.config.SysLogAspect                       :  171 - 返回数据：{}R{code=-1, msg='修改失败,请重试', data=null, map={}}
[2023-06-03 11:31:40.866] [ INFO] com.mc.userserver.config.SysLogAspect                       :  172 - 执行描述：{}用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 11:31:40.866] [ INFO] com.mc.userserver.config.SysLogAspect                       :  174 - costTime: {}ms2027
[2023-06-03 11:31:40.866] [ INFO] com.mc.userserver.config.SysLogAspect                       :  175 - ------------------------------------------------------
[2023-06-03 11:35:58.023] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:40:58.028] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:45:58.038] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:50:58.050] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 11:55:58.064] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:00:58.068] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:05:58.070] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:10:58.084] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:15:58.099] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:20:58.113] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:25:58.117] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:30:58.125] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:35:58.126] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:40:58.128] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:45:58.130] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:50:58.143] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 12:55:58.145] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:00:58.153] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:05:58.163] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:10:58.173] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:15:58.185] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:20:58.187] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:22:24.337] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 13:22:24.337] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685769744337, current=DOWN, previous=UP]
[2023-06-03 13:22:24.338] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:22:24.346] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:22:24.568] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:22:24.573] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 13:22:24.574] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 13:22:24.706] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 13:22:27.744] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 13:22:27.769] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 13:22:27.787] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 13:22:36.010] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 13:22:37.727] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 13:22:38.268] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 13:22:38.270] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 13:22:38.290] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 13:22:38.504] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 13:22:38.753] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:22:38.754] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:22:38.756] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:22:39.008] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 13:22:39.016] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:22:39.017] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 13:22:39.017] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 13:22:39.139] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 13:22:39.139] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1400 ms
[2023-06-03 13:22:39.502] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 13:22:39.621] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 13:22:40.654] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:22:40.654] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:22:40.657] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:22:40.658] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:22:40.828] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:22:40.897] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 13:22:42.413] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:22:42.449] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 13:22:43.742] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:22:45.065] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:22:45.088] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:22:45.116] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:22:45.196] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 13:22:45.222] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 13:22:45.617] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 13:22:45.618] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 13:22:45.702] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 13:22:45.702] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 13:22:45.895] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:22:45.909] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 13:22:45.910] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 13:22:46.203] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 13:22:46.205] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 13:22:46.208] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 13:22:46.210] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685769766210 with initial instances count: 1
[2023-06-03 13:22:46.214] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 13:22:46.214] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685769766214, current=UP, previous=STARTING]
[2023-06-03 13:22:46.216] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:22:46.216] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:22:46.239] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 13:22:46.240] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 13:22:46.258] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:22:47.545] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:22:48.839] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:22:48.846] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.548 seconds (JVM running for 15.564)
[2023-06-03 13:23:05.625] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 13:23:05.625] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 13:23:05.632] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 13:23:06.452] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 13:23:12.980] [ INFO] com.mc.userserver.config.SysLogAspect                       :  165 - <=====================================================
[2023-06-03 13:23:12.981] [ INFO] com.mc.userserver.config.SysLogAspect                       :  166 - 请求来源： =》127.0.0.1
[2023-06-03 13:23:12.981] [ INFO] com.mc.userserver.config.SysLogAspect                       :  167 - 请求URL：http://localhost:10080/info/alterAddress
[2023-06-03 13:23:12.981] [ INFO] com.mc.userserver.config.SysLogAspect                       :  168 - 请求方式：POST
[2023-06-03 13:23:12.981] [ INFO] com.mc.userserver.config.SysLogAspect                       :  169 - 响应方法：com.mc.userserver.controller.InfoController.alterAddress
[2023-06-03 13:23:12.981] [ INFO] com.mc.userserver.config.SysLogAspect                       :  170 - 请求参数：{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号52, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T13:23:06.454, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 13:23:12.982] [ INFO] com.mc.userserver.config.SysLogAspect                       :  171 - 返回数据：{}R{code=-1, msg='修改失败,请重试', data=null, map={}}
[2023-06-03 13:23:12.982] [ INFO] com.mc.userserver.config.SysLogAspect                       :  172 - 执行描述：{}用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 13:23:12.983] [ INFO] com.mc.userserver.config.SysLogAspect                       :  174 - costTime: {}ms6564
[2023-06-03 13:23:12.984] [ INFO] com.mc.userserver.config.SysLogAspect                       :  175 - ------------------------------------------------------
[2023-06-03 13:27:45.914] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:32:45.926] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:37:45.939] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:40:48.443] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 13:40:48.443] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685770848443, current=DOWN, previous=UP]
[2023-06-03 13:40:48.443] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:40:48.447] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:40:48.773] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:40:48.776] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 13:40:48.782] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 13:40:48.922] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 13:40:51.935] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 13:40:51.947] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 13:40:51.954] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 13:41:12.502] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 13:41:14.194] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 13:41:14.757] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 13:41:14.759] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 13:41:14.780] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 13:41:14.997] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 13:41:15.195] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:41:15.198] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:41:15.200] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:41:15.434] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 13:41:15.441] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:41:15.442] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 13:41:15.442] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 13:41:15.549] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 13:41:15.549] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1343 ms
[2023-06-03 13:41:15.919] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 13:41:16.020] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 13:41:17.018] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:41:17.019] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:41:17.022] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:41:17.022] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:41:17.195] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:41:17.266] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 13:41:18.789] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:41:18.826] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 13:41:20.180] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:41:21.478] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:41:21.501] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:41:21.515] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:41:21.616] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 13:41:21.641] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 13:41:22.010] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 13:41:22.010] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 13:41:22.094] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 13:41:22.094] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 13:41:22.294] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:41:22.308] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 13:41:22.308] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 13:41:22.308] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 13:41:22.308] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 13:41:22.309] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 13:41:22.309] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 13:41:22.309] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 13:41:22.583] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 13:41:22.585] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 13:41:22.587] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 13:41:22.590] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685770882589 with initial instances count: 1
[2023-06-03 13:41:22.594] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 13:41:22.594] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685770882594, current=UP, previous=STARTING]
[2023-06-03 13:41:22.596] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:41:22.597] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:41:22.617] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 13:41:22.618] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 13:41:22.631] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:41:23.940] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:41:25.233] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:41:25.240] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.484 seconds (JVM running for 15.595)
[2023-06-03 13:41:40.226] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 13:41:40.227] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 13:41:40.234] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 13:41:41.059] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 13:43:46.797] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-03 13:43:46.797] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:43:46.807] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:43:59.858] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 13:43:59.858] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685771039858, current=DOWN, previous=UP]
[2023-06-03 13:43:59.858] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:43:59.874] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:44:00.165] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:44:00.167] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 13:44:00.171] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 13:44:00.300] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 13:44:03.308] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 13:44:03.324] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 13:44:03.332] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 13:44:09.966] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 13:44:11.700] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 13:44:12.210] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 13:44:12.212] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 13:44:12.233] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 13:44:12.456] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 13:44:12.629] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:44:12.630] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:44:12.632] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 13:44:12.888] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 13:44:12.895] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:44:12.896] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 13:44:12.896] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 13:44:13.003] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 13:44:13.004] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1292 ms
[2023-06-03 13:44:13.362] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 13:44:13.456] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 13:44:14.478] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:44:14.478] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:44:14.481] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 13:44:14.481] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 13:44:14.656] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 13:44:14.728] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 13:44:16.245] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:44:16.284] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 13:44:17.668] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:44:19.004] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:44:19.027] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:44:19.043] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 13:44:19.138] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 13:44:19.166] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 13:44:19.544] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 13:44:19.544] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 13:44:19.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 13:44:19.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 13:44:19.859] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 13:44:19.874] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 13:44:20.159] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 13:44:20.161] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 13:44:20.164] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 13:44:20.167] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685771060166 with initial instances count: 1
[2023-06-03 13:44:20.171] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 13:44:20.171] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685771060171, current=UP, previous=STARTING]
[2023-06-03 13:44:20.173] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 13:44:20.173] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 13:44:20.192] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 13:44:20.193] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 13:44:20.218] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 13:44:21.492] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:44:22.780] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 13:44:22.787] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.554 seconds (JVM running for 15.537)
[2023-06-03 13:44:41.034] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 13:44:41.034] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 13:44:41.042] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 13:44:41.792] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 13:49:19.884] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:54:19.895] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 13:59:19.910] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:02:31.300] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:02:31.300] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685772151300, current=DOWN, previous=UP]
[2023-06-03 14:02:31.300] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:02:31.310] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:02:31.637] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:02:31.639] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:02:31.644] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:02:31.767] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:02:34.773] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:02:34.788] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:02:34.797] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:02:46.448] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:02:48.156] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:02:48.895] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:02:48.897] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:02:48.917] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 14:02:49.139] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 14:02:49.333] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:02:49.335] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:02:49.337] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:02:49.565] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:02:49.572] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:02:49.573] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:02:49.573] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:02:49.687] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:02:49.688] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1519 ms
[2023-06-03 14:02:50.055] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:02:50.160] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:02:51.182] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:02:51.182] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:02:51.186] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:02:51.186] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:02:51.363] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:02:51.436] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:02:52.963] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:02:53.012] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:02:54.379] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:02:55.686] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:02:55.710] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:02:55.722] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:02:55.802] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:02:55.829] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:02:56.222] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:02:56.222] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:02:56.305] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:02:56.306] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:02:56.498] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:02:56.513] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:02:56.514] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:02:56.804] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:02:56.806] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:02:56.808] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:02:56.811] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685772176810 with initial instances count: 1
[2023-06-03 14:02:56.814] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:02:56.815] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685772176815, current=UP, previous=STARTING]
[2023-06-03 14:02:56.817] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:02:56.817] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:02:56.837] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:02:56.838] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:02:56.849] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:02:58.127] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:02:59.411] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:02:59.418] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.721 seconds (JVM running for 15.745)
[2023-06-03 14:03:08.785] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 14:03:08.785] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 14:03:08.792] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 14:03:09.631] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 14:11:55.787] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:11:55.790] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-03 14:11:55.791] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:11:55.825] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:16:11.689] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:16:11.689] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685772971689, current=DOWN, previous=UP]
[2023-06-03 14:16:11.689] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:16:11.704] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:16:12.006] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:16:12.008] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:16:12.013] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:16:12.136] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:16:15.147] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:16:15.163] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:16:15.170] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:17:13.839] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:17:15.494] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:17:16.071] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:17:16.073] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:17:16.094] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 14:17:16.318] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=20f78ec0-e6fa-3b3b-8d69-ad2ca736ba83
[2023-06-03 14:17:16.510] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:17:16.512] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:17:16.513] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:17:16.757] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:17:16.765] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:17:16.765] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:17:16.766] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:17:16.883] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:17:16.883] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1376 ms
[2023-06-03 14:17:17.245] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:17:17.348] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:17:18.305] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:17:18.305] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:17:18.310] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:17:18.311] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:17:18.483] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:17:18.555] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:17:20.038] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:17:20.073] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:17:21.373] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:17:22.636] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:17:22.659] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:17:22.687] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:17:22.768] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:17:22.793] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:17:23.121] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:17:23.121] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:17:23.205] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:17:23.206] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:17:23.404] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:17:23.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:17:23.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:17:23.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:17:23.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:17:23.419] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:17:23.419] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:17:23.419] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:17:23.700] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:17:23.703] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:17:23.705] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:17:23.708] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685773043707 with initial instances count: 1
[2023-06-03 14:17:23.711] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:17:23.712] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685773043712, current=UP, previous=STARTING]
[2023-06-03 14:17:23.714] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:17:23.714] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:17:23.735] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:17:23.736] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:17:23.753] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:17:25.016] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:17:26.256] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:17:26.264] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.135 seconds (JVM running for 15.025)
[2023-06-03 14:17:31.569] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 14:17:31.569] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 14:17:31.576] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 14:17:32.302] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 14:19:15.369] [ INFO] org.apache.http.impl.client.DefaultHttpClient               :  690 - I/O exception (java.net.SocketException) caught when processing request to {}->http://127.0.0.1:10023: Software caused connection abort: recv failed
[2023-06-03 14:19:15.369] [ INFO] org.apache.http.impl.client.DefaultHttpClient               :  700 - Retrying request to {}->http://127.0.0.1:10023
[2023-06-03 14:19:15.371] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-03 14:19:15.372] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:19:15.373] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 14:19:15.373] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 14:19:20.620] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:19:54.035] [ INFO] com.mc.userserver.config.SysLogAspect                       :  222 - <=====================================================
[2023-06-03 14:19:54.035] [ INFO] com.mc.userserver.config.SysLogAspect                       :  223 - 请求来源： =》127.0.0.1
[2023-06-03 14:19:54.036] [ INFO] com.mc.userserver.config.SysLogAspect                       :  224 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 14:19:54.036] [ INFO] com.mc.userserver.config.SysLogAspect                       :  225 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 14:19:54.037] [ INFO] com.mc.userserver.config.SysLogAspect                       :  226 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T14:17:32.305, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 14:19:54.037] [ INFO] com.mc.userserver.config.SysLogAspect                       :  227 - 返回数据：=》R{code=200, msg='修改成功', data=null, map={}}
[2023-06-03 14:19:54.038] [ INFO] com.mc.userserver.config.SysLogAspect                       :  228 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 14:19:54.038] [ INFO] com.mc.userserver.config.SysLogAspect                       :  229 - costTime: {}ms =>120133ms
[2023-06-03 14:19:54.039] [ INFO] com.mc.userserver.config.SysLogAspect                       :  230 - ------------------------------------------------------
[2023-06-03 14:22:23.425] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:27:23.432] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:32:23.443] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:37:23.459] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:42:23.473] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:47:23.475] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:50:27.358] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:50:27.358] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775027358, current=DOWN, previous=UP]
[2023-06-03 14:50:27.358] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:50:27.374] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:50:27.706] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:50:27.708] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:50:27.709] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:50:27.835] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:50:30.841] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:50:30.856] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:50:30.864] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:50:38.703] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:50:41.376] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:50:41.951] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:50:41.953] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:50:41.974] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 14:50:42.215] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 14:50:42.423] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:50:42.425] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:50:42.428] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:50:42.674] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:50:42.683] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:50:42.684] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:50:42.684] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:50:42.802] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:50:42.802] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1413 ms
[2023-06-03 14:50:43.165] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:50:43.274] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:50:44.496] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:50:44.496] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:50:44.500] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:50:44.500] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:50:44.675] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:50:44.755] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:50:46.308] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:50:46.388] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:50:47.810] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:50:49.233] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:50:49.257] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:50:49.271] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:50:49.366] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:50:49.392] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:50:49.743] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:50:49.743] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:50:49.827] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:50:49.828] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:50:50.028] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:50:50.043] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:50:50.043] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:50:50.043] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:50:50.043] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:50:50.044] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:50:50.044] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:50:50.044] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:50:50.314] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:50:50.317] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:50:50.319] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:50:50.323] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775050321 with initial instances count: 1
[2023-06-03 14:50:50.327] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:50:50.327] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775050327, current=UP, previous=STARTING]
[2023-06-03 14:50:50.329] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:50:50.330] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:50:50.354] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:50:50.355] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:50:50.362] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:50:51.756] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:50:53.067] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:50:53.075] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 16.36 seconds (JVM running for 17.745)
[2023-06-03 14:51:19.662] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:51:19.663] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775079663, current=DOWN, previous=UP]
[2023-06-03 14:51:19.663] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:51:19.669] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:51:19.996] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:51:19.998] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:51:19.999] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:51:20.015] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:51:23.027] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-03 14:51:23.028] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:51:23.043] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:51:23.051] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:51:30.258] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:51:31.942] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:51:32.458] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:51:32.460] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:51:32.481] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 14:51:32.707] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 14:51:32.898] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:51:32.900] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:51:32.901] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:51:33.148] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:51:33.155] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:51:33.156] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:51:33.156] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:51:33.274] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:51:33.275] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1322 ms
[2023-06-03 14:51:33.660] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:51:33.767] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:51:34.855] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:51:34.855] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:51:34.860] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:51:34.861] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:51:35.051] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:51:35.127] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:51:36.605] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:51:36.643] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:51:37.921] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:51:39.191] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:51:39.218] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:51:39.233] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:51:39.318] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:51:39.348] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:51:39.699] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:51:39.700] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:51:39.783] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:51:39.783] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:51:40.023] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:51:40.039] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:51:40.039] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:51:40.039] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:51:40.040] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:51:40.040] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:51:40.040] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:51:40.040] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:51:40.684] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:51:40.688] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:51:40.718] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:51:40.723] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775100722 with initial instances count: 1
[2023-06-03 14:51:40.729] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:51:40.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775100730, current=UP, previous=STARTING]
[2023-06-03 14:51:40.733] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:51:40.736] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:51:40.778] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:51:40.781] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:51:40.791] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:51:42.459] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:51:43.732] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:51:43.750] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.286 seconds (JVM running for 16.348)
[2023-06-03 14:52:05.203] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:52:05.203] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775125203, current=DOWN, previous=UP]
[2023-06-03 14:52:05.204] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:52:05.287] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:52:05.532] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:52:05.534] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:52:05.535] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:52:05.551] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:52:08.552] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:52:08.572] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:52:08.586] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:52:15.535] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:52:17.216] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:52:17.733] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:52:17.735] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:52:17.756] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 14:52:17.988] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 14:52:18.169] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:52:18.170] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:52:18.172] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:52:18.431] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:52:18.438] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:52:18.439] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:52:18.439] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:52:18.550] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:52:18.550] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1322 ms
[2023-06-03 14:52:18.911] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:52:19.003] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:52:20.116] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:52:20.116] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:52:20.120] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:52:20.120] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:52:20.295] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:52:20.368] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:52:21.852] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:52:21.904] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:52:23.185] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:52:24.439] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:52:24.461] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:52:24.474] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:52:24.556] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:52:24.583] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:52:24.899] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:52:24.899] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:52:24.983] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:52:24.983] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:52:25.191] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:52:25.206] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:52:25.207] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:52:25.498] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:52:25.500] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:52:25.503] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:52:25.507] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775145506 with initial instances count: 2
[2023-06-03 14:52:25.510] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:52:25.511] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775145511, current=UP, previous=STARTING]
[2023-06-03 14:52:25.512] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:52:25.513] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:52:25.534] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:52:25.535] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:52:25.545] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:52:26.809] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:52:28.064] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:52:28.083] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.314 seconds (JVM running for 15.368)
[2023-06-03 14:52:37.664] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 14:52:37.664] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 14:52:37.671] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 14:52:38.483] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 14:53:28.858] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:53:28.859] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775208859, current=DOWN, previous=UP]
[2023-06-03 14:53:28.859] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:53:28.869] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:53:29.194] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:53:29.197] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:53:29.201] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:53:29.324] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:53:32.330] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:53:32.344] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:53:32.351] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:53:39.521] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:53:41.237] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:53:41.739] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:53:41.742] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:53:41.764] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
[2023-06-03 14:53:41.974] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 14:53:42.156] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:53:42.157] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:53:42.159] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:53:42.384] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:53:42.390] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:53:42.391] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:53:42.391] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:53:42.498] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:53:42.498] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1250 ms
[2023-06-03 14:53:42.841] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:53:42.938] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:53:43.946] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:53:43.946] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:53:43.950] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:53:43.950] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:53:44.120] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:53:44.194] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:53:45.711] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:53:45.756] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:53:47.064] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:53:48.346] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:53:48.368] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:53:48.382] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:53:48.460] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:53:48.485] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:53:48.837] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:53:48.837] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:53:48.919] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:53:48.919] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:53:49.119] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:53:49.132] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:53:49.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:53:49.411] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:53:49.414] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:53:49.416] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:53:49.419] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775229418 with initial instances count: 1
[2023-06-03 14:53:49.423] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:53:49.424] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775229424, current=UP, previous=STARTING]
[2023-06-03 14:53:49.426] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:53:49.426] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:53:49.447] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:53:49.447] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:53:49.461] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:53:50.755] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:53:52.040] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:53:52.049] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.197 seconds (JVM running for 15.263)
[2023-06-03 14:53:57.488] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 14:53:57.488] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 14:53:57.496] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 14:53:58.334] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 14:53:58.670] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 14:53:58.670] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 14:53:58.670] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 14:53:58.670] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 14:53:58.671] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号123, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T14:53:58.337, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 14:53:58.671] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 14:53:58.671] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 14:53:58.671] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>371ms
[2023-06-03 14:53:58.671] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 14:58:18.089] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 14:58:18.090] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775498090, current=DOWN, previous=UP]
[2023-06-03 14:58:18.090] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:58:18.109] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:58:18.464] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:58:18.466] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 14:58:18.470] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 14:58:18.595] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 14:58:21.608] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-03 14:58:21.609] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 14:58:21.625] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 14:58:21.632] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 14:58:29.111] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 14:58:30.825] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 14:58:31.349] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 14:58:31.351] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 14:58:31.372] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-03 14:58:31.591] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 14:58:31.785] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:58:31.787] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:58:31.789] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 14:58:32.037] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 14:58:32.045] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:58:32.046] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 14:58:32.046] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 14:58:32.157] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 14:58:32.157] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1321 ms
[2023-06-03 14:58:32.509] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 14:58:32.616] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 14:58:33.656] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:58:33.656] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:58:33.660] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 14:58:33.660] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 14:58:33.835] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 14:58:33.909] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 14:58:35.453] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:58:35.489] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 14:58:36.807] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:58:38.107] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:58:38.132] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:58:38.147] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 14:58:38.249] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 14:58:38.275] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 14:58:38.639] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 14:58:38.639] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 14:58:38.726] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 14:58:38.726] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 14:58:38.934] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 14:58:38.948] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 14:58:38.948] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 14:58:38.949] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 14:58:38.949] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 14:58:38.949] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 14:58:38.949] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 14:58:38.949] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 14:58:39.237] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 14:58:39.240] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 14:58:39.242] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 14:58:39.246] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775519245 with initial instances count: 2
[2023-06-03 14:58:39.249] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 14:58:39.249] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775519249, current=UP, previous=STARTING]
[2023-06-03 14:58:39.251] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 14:58:39.251] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 14:58:39.271] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 14:58:39.272] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 14:58:39.292] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 14:58:40.603] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:58:41.919] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 14:58:41.927] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.645 seconds (JVM running for 15.871)
[2023-06-03 14:58:49.990] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 14:58:49.990] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 14:58:49.999] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-03 14:58:51.268] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 14:58:52.040] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 14:58:52.040] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 14:58:52.040] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 14:58:52.040] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 14:58:52.041] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号1235152, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T14:58:51.270, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 14:58:52.041] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 14:58:52.041] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 14:58:52.041] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>809ms
[2023-06-03 14:58:52.041] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 14:58:55.729] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 14:58:55.817] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'operation_desc' in 'field list'
### The error may exist in com/mc/userserver/mapper/UserOperationLogMapper.java (best guess)
### The error may involve com.mc.userserver.mapper.UserOperationLogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_operation_log_table  ( operation_id, user_id, operation_addr,  operation_content, operation_dev, operation_result, operation_desc, operation_cost, create_time, update_time )  VALUES  ( ?, ?, ?,  ?, ?, ?, ?, ?, ?, ? )
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'operation_desc' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'operation_desc' in 'field list'] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'operation_desc' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy94.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy98.insert(Unknown Source)
	at com.mc.userserver.config.SysLogAspect.saveLogInfo(SysLogAspect.java:287)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:191)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$f998929a.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 15:01:00.695] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 15:01:00.721] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 124956
[2023-06-03 15:01:02.961] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号545152, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T15:01:00.696, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>2266ms
[2023-06-03 15:01:02.962] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:01:10.340] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:01:10.365] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'operation_cost' in 'field list'
### The error may exist in com/mc/userserver/mapper/UserOperationLogMapper.java (best guess)
### The error may involve com.mc.userserver.mapper.UserOperationLogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_operation_log_table  ( operation_id, user_id, operation_addr,  operation_content, operation_dev, operation_result, operation_desc, operation_cost, create_time, update_time )  VALUES  ( ?, ?, ?,  ?, ?, ?, ?, ?, ?, ? )
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'operation_cost' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'operation_cost' in 'field list'] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'operation_cost' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy94.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy98.insert(Unknown Source)
	at com.mc.userserver.config.SysLogAspect.saveLogInfo(SysLogAspect.java:287)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:191)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$f998929a.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 15:01:40.754] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955号545152, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T15:01:40.755, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:01:40.816] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:01:40.817] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 15:01:40.817] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>62ms
[2023-06-03 15:01:40.817] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:01:45.661] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:01:45.687] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'operation_content' at row 1
### The error may exist in com/mc/userserver/mapper/UserOperationLogMapper.java (best guess)
### The error may involve com.mc.userserver.mapper.UserOperationLogMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_operation_log_table  ( operation_id, user_id, operation_addr,  operation_content, operation_dev, operation_result, operation_desc, operation_cost, create_time, update_time )  VALUES  ( ?, ?, ?,  ?, ?, ?, ?, ?, ?, ? )
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'operation_content' at row 1
; Data truncation: Data too long for column 'operation_content' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'operation_content' at row 1] with root cause
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'operation_content' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy163.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:194)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy94.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:148)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy98.insert(Unknown Source)
	at com.mc.userserver.config.SysLogAspect.saveLogInfo(SysLogAspect.java:287)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:191)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$f998929a.alterAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 15:03:38.954] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:05:11.169] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:05:11.170] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775911170, current=DOWN, previous=UP]
[2023-06-03 15:05:11.170] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:05:11.186] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:05:11.389] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:05:11.392] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:05:11.394] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:05:11.534] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:05:14.547] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:05:14.560] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:05:14.568] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:05:21.512] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:05:23.282] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:05:23.797] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:05:23.799] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:05:23.822] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:05:24.047] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:05:24.258] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:05:24.260] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:05:24.264] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:05:24.499] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:05:24.506] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:05:24.507] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:05:24.507] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:05:24.629] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:05:24.629] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1335 ms
[2023-06-03 15:05:24.983] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:05:25.085] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:05:26.155] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:05:26.155] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:05:26.160] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:05:26.160] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:05:26.347] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:05:26.423] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:05:27.981] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:05:28.022] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:05:29.341] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:05:30.650] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:05:30.672] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:05:30.685] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:05:30.765] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:05:30.791] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:05:31.145] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:05:31.145] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:05:31.237] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:05:31.237] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:05:31.433] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:05:31.448] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:05:31.448] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:05:31.448] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:05:31.449] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:05:31.449] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:05:31.449] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:05:31.449] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:05:31.737] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:05:31.740] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:05:31.743] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:05:31.746] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685775931745 with initial instances count: 2
[2023-06-03 15:05:31.749] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:05:31.749] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685775931749, current=UP, previous=STARTING]
[2023-06-03 15:05:31.751] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:05:31.751] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:05:31.773] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:05:31.774] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:05:31.793] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:05:33.065] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:05:34.373] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:05:34.381] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.613 seconds (JVM running for 15.787)
[2023-06-03 15:05:39.952] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:05:39.952] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:05:39.960] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 15:05:41.827] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 15:05:42.152] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:05:42.152] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:05:42.152] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 15:05:42.152] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:05:42.153] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T15:05:41.829, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:05:42.153] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:05:42.153] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 15:05:42.153] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>377ms
[2023-06-03 15:05:42.154] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:05:44.977] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:07:21.861] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:07:21.861] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776041861, current=DOWN, previous=UP]
[2023-06-03 15:07:21.862] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:07:21.866] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:07:22.274] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:07:22.277] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:07:22.283] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:07:22.422] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:07:25.425] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:07:25.441] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:07:25.449] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:07:32.405] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:07:34.149] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:07:34.685] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:07:34.687] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:07:34.709] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:07:34.950] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:07:35.148] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:07:35.150] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:07:35.152] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:07:35.411] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:07:35.418] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:07:35.419] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:07:35.419] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:07:35.531] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:07:35.532] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1372 ms
[2023-06-03 15:07:35.890] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:07:35.991] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:07:37.077] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:07:37.078] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:07:37.081] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:07:37.082] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:07:37.261] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:07:37.336] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:07:38.877] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:07:38.913] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:07:40.228] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:07:42.570] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:07:42.592] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:07:42.607] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:07:42.690] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:07:42.717] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:07:43.090] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:07:43.090] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:07:43.179] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:07:43.179] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:07:43.386] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:07:43.400] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:07:43.400] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:07:43.401] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:07:43.401] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:07:43.401] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:07:43.401] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:07:43.401] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:07:43.689] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:07:43.691] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:07:43.693] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:07:43.696] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685776063695 with initial instances count: 1
[2023-06-03 15:07:43.699] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:07:43.700] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776063700, current=UP, previous=STARTING]
[2023-06-03 15:07:43.702] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:07:43.702] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:07:43.723] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:07:43.724] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:07:43.738] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:07:45.046] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:07:46.352] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:07:46.360] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.725 seconds (JVM running for 16.728)
[2023-06-03 15:07:58.182] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:07:58.182] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:07:58.190] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 15:07:58.961] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 15:07:59.280] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:07:59.280] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:07:59.280] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T15:07:58.965, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>353ms
[2023-06-03 15:07:59.281] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:07:59.289] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:08:28.506] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:08:28.506] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776108506, current=DOWN, previous=UP]
[2023-06-03 15:08:28.506] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:08:28.522] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:08:28.919] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:08:28.921] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:08:28.926] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:08:29.083] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:08:32.095] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:08:32.111] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:08:32.119] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:08:38.660] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:08:40.713] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:08:41.701] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:08:41.703] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:08:41.724] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:08:41.944] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:08:42.127] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:08:42.128] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:08:42.130] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:08:42.357] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:08:42.364] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:08:42.365] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:08:42.365] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:08:42.474] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:08:42.474] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1723 ms
[2023-06-03 15:08:42.811] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:08:42.916] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:08:44.005] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:08:44.005] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:08:44.010] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:08:44.010] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:08:44.186] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:08:44.261] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:08:45.790] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:08:45.830] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:08:47.166] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:08:48.487] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:08:48.533] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:08:48.547] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:08:48.630] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:08:48.655] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:08:49.016] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:08:49.016] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:08:49.106] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:08:49.106] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:08:49.312] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:08:49.326] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:08:49.609] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:08:49.611] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:08:49.613] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:08:49.616] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685776129615 with initial instances count: 1
[2023-06-03 15:08:49.619] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:08:49.620] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776129620, current=UP, previous=STARTING]
[2023-06-03 15:08:49.622] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:08:49.623] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:08:49.644] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:08:49.645] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:08:49.653] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:08:50.960] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:08:52.305] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:08:52.313] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.429 seconds (JVM running for 16.438)
[2023-06-03 15:09:09.707] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:09:09.707] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:09:09.715] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-03 15:09:12.869] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   30 - 公共字段自动填充[update]...
[2023-06-03 15:09:13.893] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:09:13.893] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:09:13.893] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/alterAddress
[2023-06-03 15:09:13.895] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:09:13.896] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=0bb9b9d05688499aacfeb07431e0d631, addressInfo=人民西路1955弄, addressWhere=上海市上海市浦东新区, userId=null, createTime=null, updateTime=2023-06-03T15:09:12.872, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:09:13.896] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:09:13.896] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:0bb9b9d05688499aacfeb07431e0d631-修改地址成功
[2023-06-03 15:09:13.896] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>1060ms
[2023-06-03 15:09:13.897] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:09:13.913] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:13:13.617] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:13:13.643] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 239653
[2023-06-03 15:13:39.148] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:13:39.148] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776419148, current=DOWN, previous=UP]
[2023-06-03 15:13:39.148] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:13:39.163] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:13:39.474] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:13:39.476] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:13:39.479] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:13:39.604] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:13:42.622] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:13:42.636] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:13:42.644] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:13:55.578] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:13:57.268] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:13:57.953] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:13:57.955] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:13:57.976] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:13:58.187] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:13:58.372] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:13:58.374] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:13:58.375] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:13:58.614] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:13:58.621] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:13:58.622] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:13:58.622] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:13:58.727] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:13:58.727] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1448 ms
[2023-06-03 15:13:59.062] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:13:59.163] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:14:00.162] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:14:00.163] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:14:00.167] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:14:00.167] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:14:00.341] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:14:00.414] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:14:01.930] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:14:01.977] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:14:03.286] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:14:04.567] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:14:04.589] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:14:04.602] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:14:04.682] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:14:04.708] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:14:05.050] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:14:05.050] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:14:05.132] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:14:05.132] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:14:05.327] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:14:05.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:14:05.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:14:05.342] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:14:05.342] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:14:05.342] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:14:05.342] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:14:05.342] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:14:05.626] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:14:05.629] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:14:05.632] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:14:05.635] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685776445634 with initial instances count: 2
[2023-06-03 15:14:05.638] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:14:05.638] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776445638, current=UP, previous=STARTING]
[2023-06-03 15:14:05.640] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:14:05.640] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:14:05.660] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:14:05.661] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:14:05.680] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:14:06.968] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:14:08.248] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:14:08.256] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.455 seconds (JVM running for 15.382)
[2023-06-03 15:14:23.571] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:14:23.571] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:14:23.579] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 15:14:24.357] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:14:24.679] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:14:24.679] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/addAddress
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=fcf60b4364c44ccdb99e326a15fa2ecd, addressInfo=北方的狼, addressWhere=上海市上海市徐汇区, userId=48284c2be13c47028a2157475f23423d, createTime=2023-06-03T15:14:24.360, updateTime=2023-06-03T15:14:24.360, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:fcf60b4364c44ccdb99e326a15fa2ecd-新增地址成功
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>354ms
[2023-06-03 15:14:24.680] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:14:24.683] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:16:31.146] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:16:31.146] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776591146, current=DOWN, previous=UP]
[2023-06-03 15:16:31.147] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:16:31.160] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:16:31.476] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:16:31.478] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:16:31.483] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:16:31.605] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:16:34.621] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:16:34.637] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:16:34.645] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:16:41.458] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:16:43.161] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:16:43.672] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:16:43.674] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:16:43.695] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:16:43.910] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:16:44.093] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:16:44.094] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:16:44.096] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:16:44.320] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:16:44.327] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:16:44.328] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:16:44.328] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:16:44.435] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:16:44.436] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1263 ms
[2023-06-03 15:16:44.768] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:16:44.871] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:16:45.889] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:16:45.889] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:16:45.892] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:16:45.893] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:16:46.064] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:16:46.134] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:16:47.640] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:16:47.676] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:16:48.992] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:16:50.298] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:16:50.323] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:16:50.342] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:16:50.431] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:16:50.457] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:16:50.813] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:16:50.813] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:16:50.895] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:16:50.896] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:16:51.093] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:16:51.107] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:16:51.108] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:16:51.376] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:16:51.378] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:16:51.380] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:16:51.383] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685776611382 with initial instances count: 1
[2023-06-03 15:16:51.386] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:16:51.387] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776611387, current=UP, previous=STARTING]
[2023-06-03 15:16:51.388] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:16:51.389] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:16:51.409] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:16:51.409] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:16:51.427] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:16:52.696] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:16:53.992] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:16:54.000] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.293 seconds (JVM running for 15.224)
[2023-06-03 15:17:22.694] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:17:22.694] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:17:22.702] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-03 15:17:23.500] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:17:23.797] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getUser() on null context object] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1011E: Method call: Attempted to call method getUser() on null context object
	at org.springframework.expression.spel.ast.MethodReference.throwIfNotNullSafe(MethodReference.java:154)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:105)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:95)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:61)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:91)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:85)
	at org.springframework.expression.spel.ast.OpPlus.getValueInternal(OpPlus.java:83)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:117)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:308)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:221)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$5558bf9e.addAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-03 15:21:51.127] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:23:00.994] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:23:00.994] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685776980994, current=DOWN, previous=UP]
[2023-06-03 15:23:00.994] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:23:01.001] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:23:01.327] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:23:01.330] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:23:01.335] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:23:01.459] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:23:04.468] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:23:04.484] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:23:04.492] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:23:12.412] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:23:14.101] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:23:14.630] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:23:14.632] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:23:14.653] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:23:14.868] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:23:15.051] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:23:15.053] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:23:15.055] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:23:15.294] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:23:15.302] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:23:15.302] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:23:15.302] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:23:15.411] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:23:15.411] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1298 ms
[2023-06-03 15:23:15.750] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:23:15.855] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:23:16.888] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:23:16.889] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:23:16.892] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:23:16.893] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:23:17.064] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:23:17.136] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:23:18.655] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:23:18.691] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:23:20.008] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:23:21.319] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:23:21.342] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:23:21.355] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:23:21.438] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:23:21.464] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:23:21.820] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:23:21.820] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:23:21.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:23:21.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:23:22.105] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:23:22.118] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:23:22.119] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:23:22.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:23:22.399] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:23:22.401] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:23:22.405] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685777002404 with initial instances count: 1
[2023-06-03 15:23:22.408] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:23:22.409] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685777002409, current=UP, previous=STARTING]
[2023-06-03 15:23:22.410] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:23:22.411] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:23:22.431] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:23:22.432] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:23:22.439] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:23:23.736] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:23:25.028] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:23:25.036] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.405 seconds (JVM running for 15.348)
[2023-06-03 15:25:06.013] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-03 15:25:06.013] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-03 15:25:06.022] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-03 15:25:06.779] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:25:27.868] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 0, state 08S01
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 6 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 common frames omitted
[2023-06-03 15:25:28.130] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-03 15:25:28.130] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-03 15:25:28.131] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/addAddress
[2023-06-03 15:25:28.131] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-03 15:25:28.131] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=2df85c46d1734206a7b70a0cf18e5d34, addressInfo=北方的狼钴铬合金, addressWhere=上海市上海市徐汇区, userId=48284c2be13c47028a2157475f23423d, createTime=2023-06-03T15:25:06.781, updateTime=2023-06-03T15:25:06.781, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-03 15:25:28.131] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-03 15:25:28.131] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:-新增地址成功
[2023-06-03 15:25:28.132] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>21382ms
[2023-06-03 15:25:28.132] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-03 15:25:28.134] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-03 15:27:01.383] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 15:27:01.384] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685777221384, current=DOWN, previous=UP]
[2023-06-03 15:27:01.384] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:27:01.398] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:27:01.650] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:27:01.652] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 15:27:01.657] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 15:27:01.781] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 15:27:04.785] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 15:27:04.801] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-03 15:27:04.808] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-03 15:27:11.717] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-03 15:27:13.409] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-03 15:27:13.911] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-03 15:27:13.913] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-03 15:27:13.934] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-03 15:27:14.165] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=b965d06d-e7c3-3dbb-b170-e2c8ea0a9371
[2023-06-03 15:27:14.347] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:27:14.349] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:27:14.350] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-03 15:27:14.579] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-03 15:27:14.586] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:27:14.587] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-03 15:27:14.587] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-03 15:27:14.691] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-03 15:27:14.691] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1270 ms
[2023-06-03 15:27:15.029] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-03 15:27:15.133] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-03 15:27:16.103] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:27:16.103] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:27:16.107] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-03 15:27:16.107] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-03 15:27:16.277] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-03 15:27:16.348] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-03 15:27:17.817] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:27:17.857] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-03 15:27:19.162] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:27:20.443] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:27:20.489] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:27:20.504] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-03 15:27:20.589] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-03 15:27:20.615] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-03 15:27:20.937] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-03 15:27:20.937] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-03 15:27:21.018] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-03 15:27:21.018] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-03 15:27:21.220] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:27:21.234] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-03 15:27:21.234] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-03 15:27:21.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-03 15:27:21.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-03 15:27:21.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-03 15:27:21.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-03 15:27:21.235] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-03 15:27:21.503] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-03 15:27:21.505] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-03 15:27:21.507] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-03 15:27:21.511] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685777241510 with initial instances count: 1
[2023-06-03 15:27:21.514] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-03 15:27:21.514] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685777241514, current=UP, previous=STARTING]
[2023-06-03 15:27:21.516] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 15:27:21.517] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-03 15:27:21.536] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-03 15:27:21.536] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-03 15:27:21.561] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 15:27:22.814] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:27:24.078] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-03 15:27:24.088] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.186 seconds (JVM running for 15.198)
[2023-06-03 15:32:21.246] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:37:21.250] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:42:21.256] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:47:21.267] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:52:21.281] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 15:57:21.294] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:02:21.308] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:07:21.319] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:12:21.325] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:17:21.330] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:22:21.340] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:27:21.345] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:32:21.359] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:37:21.366] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:42:21.374] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:47:21.381] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:52:21.386] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 16:57:21.400] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:02:21.402] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:07:21.412] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:12:21.416] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:17:21.423] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:22:21.437] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:27:21.452] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:32:21.464] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:37:21.479] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:42:21.489] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-03 17:45:40.456] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-03 17:45:40.456] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685785540456, current=DOWN, previous=UP]
[2023-06-03 17:45:40.457] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-03 17:45:40.476] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-03 17:45:40.761] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-03 17:45:40.764] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-03 17:45:40.765] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-03 17:45:40.783] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-03 17:45:43.789] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-03 17:45:45.846] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   93 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 more

[2023-06-03 17:45:45.846] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-03 17:45:47.878] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   84 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

[2023-06-03 17:45:47.879] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-03 17:45:47.881] [ERROR] com.netflix.discovery.DiscoveryClient                       :  975 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2023-06-03 17:45:47.928] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
