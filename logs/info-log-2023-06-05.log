[2023-06-05 10:52:30.814] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 10:52:32.596] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 10:52:33.450] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 10:52:33.452] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 10:52:33.481] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-05 10:52:33.774] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 10:52:34.004] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:52:34.005] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:52:34.008] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:52:34.247] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 10:52:34.254] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 10:52:34.255] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 10:52:34.255] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 10:52:34.376] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 10:52:34.377] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1767 ms
[2023-06-05 10:52:34.810] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 10:52:34.932] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 10:52:36.028] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 10:52:36.029] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 10:52:36.035] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 10:52:36.035] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 10:52:36.225] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 10:52:36.311] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 10:52:37.849] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:52:37.883] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 10:52:39.168] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:52:40.465] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:52:40.487] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 10:52:40.501] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 10:52:40.586] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 10:52:40.612] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 10:52:40.973] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 10:52:40.973] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 10:52:41.058] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 10:52:41.058] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 10:52:41.272] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 10:52:41.286] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 10:52:41.286] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 10:52:41.286] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 10:52:41.286] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 10:52:41.286] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 10:52:41.287] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 10:52:41.287] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 10:52:41.583] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 10:52:41.586] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 10:52:41.588] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 10:52:41.594] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685933561593 with initial instances count: 1
[2023-06-05 10:52:41.599] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 10:52:41.599] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685933561599, current=UP, previous=STARTING]
[2023-06-05 10:52:41.601] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 10:52:41.602] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 10:52:41.628] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 10:52:41.629] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 10:52:41.653] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 10:52:42.942] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:52:44.212] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:52:44.219] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.901 seconds (JVM running for 17.134)
[2023-06-05 10:53:14.833] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 10:53:14.834] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 10:53:14.840] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-05 10:55:43.998] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 10:55:43.999] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685933743999, current=DOWN, previous=UP]
[2023-06-05 10:55:43.999] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 10:55:44.018] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 10:55:44.297] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 10:55:44.299] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 10:55:44.300] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 10:55:44.421] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 10:55:47.423] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-05 10:55:47.424] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 10:55:47.439] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-05 10:55:47.447] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 10:55:54.442] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 10:55:56.156] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 10:55:56.737] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 10:55:56.739] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 10:55:56.762] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-05 10:55:56.987] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 10:55:57.196] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:55:57.197] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:55:57.199] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 10:55:57.433] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 10:55:57.441] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 10:55:57.441] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 10:55:57.442] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 10:55:57.561] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 10:55:57.562] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1395 ms
[2023-06-05 10:55:57.932] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 10:55:58.034] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 10:55:59.112] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 10:55:59.112] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 10:55:59.116] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 10:55:59.116] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 10:55:59.296] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 10:55:59.376] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 10:56:00.936] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:56:00.970] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 10:56:02.285] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:56:03.583] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:56:03.605] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 10:56:03.619] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 10:56:03.702] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 10:56:03.728] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 10:56:04.089] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 10:56:04.089] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 10:56:04.178] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 10:56:04.178] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 10:56:04.379] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 10:56:04.396] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 10:56:04.397] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 10:56:04.686] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 10:56:04.689] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 10:56:04.692] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 10:56:04.697] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685933764696 with initial instances count: 1
[2023-06-05 10:56:04.700] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 10:56:04.701] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685933764701, current=UP, previous=STARTING]
[2023-06-05 10:56:04.703] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 10:56:04.703] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 10:56:04.726] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 10:56:04.727] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 10:56:04.737] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 10:56:06.042] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:56:07.345] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 10:56:07.352] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.644 seconds (JVM running for 15.718)
[2023-06-05 10:56:15.948] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 10:56:15.948] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 10:56:15.958] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 10 ms
[2023-06-05 11:01:04.405] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:06:04.411] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:11:04.420] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:11:39.936] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 11:11:39.936] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685934699936, current=DOWN, previous=UP]
[2023-06-05 11:11:39.937] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 11:11:39.947] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 11:11:40.233] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 11:11:40.235] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 11:11:40.236] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 11:11:40.354] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 11:11:43.356] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 11:11:43.373] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-05 11:11:43.380] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 11:11:50.596] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 11:11:52.266] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 11:11:52.811] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 11:11:52.814] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 11:11:52.836] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 11:11:53.055] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 11:11:53.302] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:11:53.303] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:11:53.305] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:11:53.548] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 11:11:53.557] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 11:11:53.559] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 11:11:53.559] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 11:11:53.674] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 11:11:53.674] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1397 ms
[2023-06-05 11:11:54.050] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 11:11:54.162] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 11:11:55.229] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 11:11:55.229] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 11:11:55.233] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 11:11:55.233] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 11:11:55.415] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 11:11:55.495] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 11:11:57.002] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:11:57.045] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 11:11:58.361] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:11:59.688] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:11:59.711] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 11:11:59.726] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 11:11:59.813] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 11:11:59.839] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 11:12:00.193] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 11:12:00.193] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 11:12:00.278] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 11:12:00.278] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 11:12:00.479] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:12:00.495] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 11:12:00.495] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 11:12:00.495] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 11:12:00.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 11:12:00.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 11:12:00.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 11:12:00.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 11:12:00.778] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 11:12:00.780] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 11:12:00.782] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 11:12:00.785] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685934720784 with initial instances count: 1
[2023-06-05 11:12:00.789] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 11:12:00.789] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685934720789, current=UP, previous=STARTING]
[2023-06-05 11:12:00.792] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 11:12:00.793] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 11:12:00.815] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 11:12:00.815] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 11:12:00.825] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 11:12:02.105] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:12:03.393] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:12:03.401] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.554 seconds (JVM running for 15.499)
[2023-06-05 11:12:20.802] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 11:12:20.802] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 11:12:20.810] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-05 11:12:21.612] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 11:12:43.601] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/addAddress
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=8f086f94e5f14a2394a1f74c7c34106a, addressInfo=北方联合大学, addressWhere=上海市上海市徐汇区, userId=156a3a438f4f49ddb12aeacf614d4257, createTime=2023-06-05T11:12:21.615, updateTime=2023-06-05T11:12:21.615, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:-操作-新增地址成功
[2023-06-05 11:12:43.602] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>22027ms
[2023-06-05 11:12:43.603] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-05 11:12:43.606] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 11:17:00.513] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:17:35.264] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 11:17:35.264] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685935055264, current=DOWN, previous=UP]
[2023-06-05 11:17:35.264] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 11:17:35.285] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 11:17:35.543] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 11:17:35.545] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 11:17:35.549] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 11:17:35.671] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 11:17:38.688] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 11:17:38.704] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-05 11:17:38.712] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 11:17:45.312] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 11:17:47.003] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 11:17:47.524] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 11:17:47.526] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 11:17:47.547] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-05 11:17:47.762] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 11:17:47.956] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:17:47.958] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:17:47.959] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 11:17:48.196] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 11:17:48.203] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 11:17:48.204] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 11:17:48.204] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 11:17:48.312] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 11:17:48.312] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1297 ms
[2023-06-05 11:17:48.663] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 11:17:48.764] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 11:17:49.810] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 11:17:49.810] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 11:17:49.814] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 11:17:49.814] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 11:17:49.992] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 11:17:50.071] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 11:17:51.581] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:17:51.616] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 11:17:52.897] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:17:54.157] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:17:54.179] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 11:17:54.192] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 11:17:54.273] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 11:17:54.299] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 11:17:54.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 11:17:54.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 11:17:54.725] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 11:17:54.725] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 11:17:54.926] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:17:54.941] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 11:17:54.941] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 11:17:54.941] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 11:17:54.941] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 11:17:54.941] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 11:17:54.942] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 11:17:54.942] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 11:17:55.228] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 11:17:55.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 11:17:55.234] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 11:17:55.236] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685935075236 with initial instances count: 2
[2023-06-05 11:17:55.240] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 11:17:55.240] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685935075240, current=UP, previous=STARTING]
[2023-06-05 11:17:55.242] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 11:17:55.242] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 11:17:55.263] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 11:17:55.264] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 11:17:55.284] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 11:17:56.556] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:17:57.824] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-05 11:17:57.832] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.217 seconds (JVM running for 15.205)
[2023-06-05 11:18:23.823] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 11:18:23.824] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 11:18:23.833] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-05 11:18:24.685] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 11:18:49.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/info/addAddress:costTime: 25256msms
[2023-06-05 11:18:49.908] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 11:22:54.947] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:27:54.961] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:32:54.975] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:37:54.982] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:42:54.988] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:47:54.988] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:52:55.002] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 11:57:55.010] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:02:55.011] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:07:55.024] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:12:55.024] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:17:55.039] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:22:55.048] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:27:55.055] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:32:55.069] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:37:55.073] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:42:55.085] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:47:55.098] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:52:55.105] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 12:57:55.109] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:02:55.124] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:07:55.135] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:12:55.148] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:17:55.155] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:22:55.175] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:27:55.185] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:32:55.198] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:37:55.207] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:42:55.210] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:43:00.198] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 13:43:00.199] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685943780199, current=DOWN, previous=UP]
[2023-06-05 13:43:00.199] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-05 13:43:00.207] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-05 13:43:00.479] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:43:00.482] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 13:43:00.483] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 13:43:00.615] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 13:43:03.646] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 13:43:03.678] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-05 13:43:03.688] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 13:43:10.229] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 13:43:11.010] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 13:43:11.647] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 13:43:11.649] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 13:43:11.674] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 13:43:11.922] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 13:43:12.112] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:43:12.113] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:43:12.115] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:43:12.410] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 13:43:12.417] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:43:12.418] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 13:43:12.418] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 13:43:12.537] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 13:43:12.538] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1499 ms
[2023-06-05 13:43:13.001] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 13:43:13.098] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 13:43:14.241] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:43:14.242] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:43:14.245] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:43:14.245] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:43:14.478] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:43:14.557] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 13:43:15.109] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 13:43:15.718] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:43:15.735] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:43:15.822] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 13:43:15.850] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 13:43:16.221] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 13:43:16.222] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 13:43:16.318] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 13:43:16.318] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 13:43:16.546] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 13:43:16.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 13:43:16.564] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 13:43:16.887] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 13:43:16.890] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 13:43:16.893] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 13:43:16.896] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685943796895 with initial instances count: 2
[2023-06-05 13:43:16.900] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 13:43:16.901] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685943796901, current=UP, previous=STARTING]
[2023-06-05 13:43:16.903] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 13:43:16.902] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:43:16.927] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 13:43:16.928] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 13:43:16.948] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 13:43:17.451] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 8.075 seconds (JVM running for 9.115)
[2023-06-05 13:43:57.715] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 13:43:57.716] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 13:43:57.724] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-05 13:43:58.560] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 13:44:24.625] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$68071dde.addAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 13:45:03.032] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 13:45:03.032] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685943903032, current=DOWN, previous=UP]
[2023-06-05 13:45:03.032] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 13:45:03.047] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 13:45:03.338] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:45:03.340] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 13:45:03.346] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 13:45:03.481] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 13:45:06.492] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 13:45:06.508] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 13:45:06.515] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 13:45:12.153] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 13:45:12.904] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 13:45:13.462] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 13:45:13.464] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 13:45:13.487] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-05 13:45:13.727] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 13:45:13.924] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:45:13.926] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:45:13.927] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:45:14.223] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 13:45:14.232] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:45:14.233] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 13:45:14.233] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 13:45:14.343] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 13:45:14.343] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1427 ms
[2023-06-05 13:45:14.758] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 13:45:14.850] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 13:45:16.001] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:45:16.002] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:45:16.006] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:45:16.006] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:45:16.192] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:45:16.276] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 13:45:16.822] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 13:45:17.443] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:45:17.457] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:45:17.545] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 13:45:17.573] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 13:45:17.957] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 13:45:17.957] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 13:45:18.047] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 13:45:18.048] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 13:45:18.264] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 13:45:18.280] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 13:45:18.281] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 13:45:18.553] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 13:45:18.556] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 13:45:18.558] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 13:45:18.561] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685943918560 with initial instances count: 2
[2023-06-05 13:45:18.565] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 13:45:18.566] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685943918566, current=UP, previous=STARTING]
[2023-06-05 13:45:18.568] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 13:45:18.568] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:45:18.590] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 13:45:18.591] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 13:45:18.610] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 13:45:19.164] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.784 seconds (JVM running for 8.863)
[2023-06-05 13:47:19.321] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 13:47:19.321] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944039321, current=DOWN, previous=UP]
[2023-06-05 13:47:19.322] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 13:47:19.332] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 13:47:19.594] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:47:19.597] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 13:47:19.598] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 13:47:19.614] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 13:47:22.625] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 13:47:22.640] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 13:47:22.648] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 13:47:26.483] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 13:47:27.194] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 13:47:27.745] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 13:47:27.748] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 13:47:27.770] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 13:47:28.011] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 13:47:28.195] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:47:28.197] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:47:28.199] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 13:47:28.487] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 13:47:28.494] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:47:28.495] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 13:47:28.495] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 13:47:28.608] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 13:47:28.608] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1402 ms
[2023-06-05 13:47:28.970] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 13:47:29.070] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 13:47:30.188] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:47:30.188] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:47:30.192] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 13:47:30.192] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 13:47:30.382] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 13:47:30.463] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 13:47:31.074] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 13:47:31.699] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:47:31.714] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 13:47:31.803] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 13:47:31.830] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 13:47:32.220] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 13:47:32.220] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 13:47:32.319] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 13:47:32.319] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 13:47:32.564] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 13:47:32.579] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 13:47:32.580] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 13:47:32.888] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 13:47:32.890] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 13:47:32.893] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 13:47:32.896] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685944052895 with initial instances count: 2
[2023-06-05 13:47:32.900] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 13:47:32.900] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944052900, current=UP, previous=STARTING]
[2023-06-05 13:47:32.902] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 13:47:32.903] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 13:47:32.922] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 13:47:32.924] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 13:47:32.938] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 13:47:33.488] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.793 seconds (JVM running for 8.825)
[2023-06-05 13:48:08.460] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 13:48:08.461] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 13:48:08.467] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-05 13:48:09.275] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 13:48:21.271] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$74911141.addAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 13:52:32.589] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 13:57:32.604] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:01:22.637] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 14:01:22.638] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944882638, current=DOWN, previous=UP]
[2023-06-05 14:01:22.638] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:01:22.651] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:01:22.941] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:01:22.944] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 14:01:22.949] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 14:01:23.073] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 14:01:26.086] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 14:01:26.101] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 14:01:26.109] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 14:01:31.958] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 14:01:32.659] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 14:01:33.213] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 14:01:33.216] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 14:01:33.240] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 14:01:33.484] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 14:01:33.683] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:01:33.685] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:01:33.687] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:01:33.933] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 14:01:33.941] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:01:33.941] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 14:01:33.941] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 14:01:34.051] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 14:01:34.051] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1378 ms
[2023-06-05 14:01:34.420] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 14:01:34.528] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 14:01:35.570] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:01:35.570] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:01:35.574] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:01:35.575] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:01:35.768] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:01:35.852] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 14:01:36.440] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 14:01:37.079] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:01:37.094] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:01:37.183] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 14:01:37.212] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 14:01:37.573] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 14:01:37.573] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 14:01:37.663] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 14:01:37.663] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 14:01:37.874] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:01:37.888] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 14:01:37.889] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 14:01:37.889] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 14:01:37.889] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 14:01:37.889] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 14:01:37.889] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 14:01:37.890] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 14:01:38.177] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 14:01:38.180] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 14:01:38.182] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 14:01:38.186] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685944898185 with initial instances count: 1
[2023-06-05 14:01:38.190] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 14:01:38.191] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944898191, current=UP, previous=STARTING]
[2023-06-05 14:01:38.193] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:01:38.194] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:01:38.213] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 14:01:38.215] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 14:01:38.236] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:01:38.777] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.649 seconds (JVM running for 8.831)
[2023-06-05 14:01:55.250] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 14:01:55.251] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 14:01:55.257] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-05 14:01:56.066] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 14:02:05.080] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.InfoController$$EnhancerBySpringCGLIB$$666ffc2.addAddress(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:02:47.858] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 14:02:47.858] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944967858, current=DOWN, previous=UP]
[2023-06-05 14:02:47.858] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:02:47.869] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:02:48.144] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:02:48.147] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 14:02:48.152] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 14:02:48.275] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 14:02:51.287] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 14:02:51.302] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 14:02:51.310] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 14:02:57.218] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 14:02:57.942] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 14:02:58.503] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 14:02:58.507] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 14:02:58.528] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 14:02:58.777] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 14:02:58.980] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:02:58.981] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:02:58.983] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:02:59.229] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 14:02:59.240] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:02:59.241] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 14:02:59.242] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 14:02:59.352] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 14:02:59.352] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1399 ms
[2023-06-05 14:02:59.730] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 14:02:59.841] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 14:03:00.973] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:03:00.973] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:03:00.977] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:03:00.977] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:03:01.173] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:03:01.258] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 14:03:01.906] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 14:03:02.515] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:03:02.532] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:03:02.619] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 14:03:02.647] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 14:03:03.017] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 14:03:03.018] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 14:03:03.109] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 14:03:03.109] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 14:03:03.324] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:03:03.340] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 14:03:03.340] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 14:03:03.340] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 14:03:03.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 14:03:03.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 14:03:03.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 14:03:03.341] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 14:03:03.625] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 14:03:03.627] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 14:03:03.630] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 14:03:03.634] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685944983633 with initial instances count: 1
[2023-06-05 14:03:03.638] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 14:03:03.638] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685944983638, current=UP, previous=STARTING]
[2023-06-05 14:03:03.641] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:03:03.641] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:03:03.661] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 14:03:03.662] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 14:03:03.688] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:03:04.227] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.717 seconds (JVM running for 8.833)
[2023-06-05 14:03:21.898] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 14:03:21.898] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 14:03:21.905] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-05 14:03:22.716] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 14:03:38.412] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-05 14:03:38.412] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/addAddress
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=f9f17759cab54bff97b77f5c50163ed5, addressInfo=西湖大学, addressWhere=上海市上海市徐汇区, userId=156a3a438f4f49ddb12aeacf614d4257, createTime=2023-06-05T14:03:22.718, updateTime=2023-06-05T14:03:22.718, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:-操作-新增地址成功
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>15731ms
[2023-06-05 14:03:38.413] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-05 14:03:38.417] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 14:08:03.351] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:13:03.366] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:18:03.376] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:23:03.386] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:28:03.398] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:32:54.737] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 14:32:54.738] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685946774738, current=DOWN, previous=UP]
[2023-06-05 14:32:54.738] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:32:54.749] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:32:55.005] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:32:55.007] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 14:32:55.012] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 14:32:55.139] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 14:32:58.148] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 14:32:58.163] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 14:32:58.171] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 14:33:03.903] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 14:33:04.666] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 14:33:05.328] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 14:33:05.331] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 14:33:05.354] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 14:33:05.627] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 14:33:05.844] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:33:05.846] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:33:05.848] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:33:06.131] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 14:33:06.140] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:33:06.140] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 14:33:06.141] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 14:33:06.264] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 14:33:06.264] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1579 ms
[2023-06-05 14:33:06.760] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 14:33:07.059] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 14:33:09.231] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:33:09.232] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:33:09.237] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:33:09.237] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:33:09.491] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:33:09.587] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 14:33:10.200] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 14:33:10.794] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:33:10.811] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:33:10.913] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 14:33:10.943] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 14:33:11.316] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 14:33:11.316] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 14:33:11.411] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 14:33:11.411] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 14:33:11.662] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:33:11.684] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 14:33:11.686] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 14:33:11.686] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 14:33:11.687] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 14:33:11.687] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 14:33:11.687] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 14:33:11.687] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 14:33:11.985] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 14:33:11.988] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 14:33:11.991] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 14:33:11.994] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685946791993 with initial instances count: 1
[2023-06-05 14:33:11.998] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 14:33:11.999] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685946791999, current=UP, previous=STARTING]
[2023-06-05 14:33:12.001] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:33:12.001] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:33:12.024] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 14:33:12.025] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 14:33:12.043] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:33:12.597] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 9.53 seconds (JVM running for 10.69)
[2023-06-05 14:36:11.726] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 14:36:11.726] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685946971726, current=DOWN, previous=UP]
[2023-06-05 14:36:11.726] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:36:11.751] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:36:11.974] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:36:11.976] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 14:36:11.977] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 14:36:11.993] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 14:36:14.994] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-05 14:36:14.994] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 14:36:15.011] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 14:36:15.018] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 14:36:21.178] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 14:36:21.918] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 14:36:22.480] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 14:36:22.483] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 14:36:22.507] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 14:36:22.745] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 14:36:22.950] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:36:22.951] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:36:22.953] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:36:23.203] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 14:36:23.211] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:36:23.211] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 14:36:23.211] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 14:36:23.329] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 14:36:23.329] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1398 ms
[2023-06-05 14:36:23.703] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 14:36:23.806] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 14:36:24.906] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:36:24.906] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:36:24.909] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:36:24.910] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:36:25.105] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:36:25.185] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 14:36:25.860] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 14:36:26.498] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:36:26.512] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:36:26.624] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 14:36:26.651] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 14:36:27.034] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 14:36:27.034] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 14:36:27.122] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 14:36:27.123] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 14:36:27.336] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:36:27.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 14:36:27.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 14:36:27.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 14:36:27.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 14:36:27.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 14:36:27.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 14:36:27.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 14:36:27.663] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 14:36:27.666] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 14:36:27.669] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 14:36:27.671] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685946987671 with initial instances count: 2
[2023-06-05 14:36:27.675] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 14:36:27.675] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685946987675, current=UP, previous=STARTING]
[2023-06-05 14:36:27.677] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:36:27.677] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:36:27.700] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 14:36:27.701] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 14:36:27.711] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:36:28.265] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.985 seconds (JVM running for 8.979)
[2023-06-05 14:36:45.189] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 14:36:45.190] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 14:36:45.199] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-05 14:36:56.055] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$da12f24f.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:37:04.157] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$da12f24f.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:37:32.158] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$da12f24f.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:37:47.974] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 14:37:47.975] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685947067975, current=DOWN, previous=UP]
[2023-06-05 14:37:47.975] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:37:47.989] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:37:48.220] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:37:48.222] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 14:37:48.223] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 14:37:48.346] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 14:37:51.355] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 14:37:51.371] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 14:37:51.379] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 14:37:57.128] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 14:37:57.831] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 14:37:58.387] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 14:37:58.390] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 14:37:58.413] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-05 14:37:58.651] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 14:37:58.851] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:37:58.852] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:37:58.855] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 14:37:59.110] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 14:37:59.117] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:37:59.118] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 14:37:59.118] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 14:37:59.232] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 14:37:59.232] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1387 ms
[2023-06-05 14:37:59.597] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 14:37:59.706] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 14:38:00.806] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:38:00.807] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:38:00.810] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 14:38:00.810] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 14:38:01.044] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 14:38:01.126] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 14:38:01.713] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 14:38:02.296] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:38:02.311] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 14:38:02.400] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 14:38:02.428] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 14:38:02.793] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 14:38:02.793] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 14:38:02.883] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 14:38:02.883] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 14:38:03.093] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:38:03.108] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 14:38:03.108] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 14:38:03.109] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 14:38:03.109] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 14:38:03.109] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 14:38:03.109] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 14:38:03.109] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 14:38:03.396] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 14:38:03.399] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 14:38:03.402] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 14:38:03.405] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685947083405 with initial instances count: 2
[2023-06-05 14:38:03.407] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 14:38:03.408] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685947083408, current=UP, previous=STARTING]
[2023-06-05 14:38:03.410] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 14:38:03.410] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 14:38:03.431] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 14:38:03.432] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 14:38:03.459] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 14:38:03.979] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.634 seconds (JVM running for 8.672)
[2023-06-05 14:38:22.951] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 14:38:22.952] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 14:38:22.957] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 5 ms
[2023-06-05 14:40:19.815] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:40:19.815] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   73 - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:40:19.825] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$5899675f.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 14:43:03.123] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:48:03.132] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:53:03.138] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 14:58:03.146] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:03:03.147] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:08:03.162] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:11:26.751] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:11:26.751] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949086751, current=DOWN, previous=UP]
[2023-06-05 15:11:26.751] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:11:26.764] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:11:27.141] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:11:27.143] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:11:27.144] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:11:27.261] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:11:30.277] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:11:30.293] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:11:30.301] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:11:58.298] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:11:58.990] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:11:59.543] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:11:59.546] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:11:59.569] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-05 15:11:59.814] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:12:00.014] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:12:00.016] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:12:00.018] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:12:00.306] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:12:00.314] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:12:00.314] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:12:00.314] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:12:00.427] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:12:00.427] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1425 ms
[2023-06-05 15:12:00.798] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:12:00.903] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:12:01.991] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:12:01.991] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:12:01.995] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:12:01.995] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:12:02.193] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:12:02.308] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:12:02.923] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:12:03.566] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:12:03.580] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:12:03.669] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:12:03.700] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:12:04.036] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:12:04.036] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:12:04.126] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:12:04.126] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:12:04.335] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:12:04.350] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:12:04.351] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:12:04.645] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:12:04.648] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:12:04.650] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:12:04.654] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685949124653 with initial instances count: 1
[2023-06-05 15:12:04.658] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:12:04.658] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949124658, current=UP, previous=STARTING]
[2023-06-05 15:12:04.660] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:12:04.661] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:12:04.684] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:12:04.685] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:12:04.698] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:12:05.200] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.702 seconds (JVM running for 8.715)
[2023-06-05 15:12:30.677] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:12:30.677] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:12:30.685] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-05 15:13:27.713] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$1397c5e2.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:13:41.212] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:13:41.213] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949221213, current=DOWN, previous=UP]
[2023-06-05 15:13:41.213] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:13:41.218] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:13:41.481] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:13:41.484] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:13:41.489] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:13:41.623] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:13:44.634] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:13:44.649] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:13:44.657] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:13:50.284] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:13:51.022] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:13:52.543] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:13:52.546] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:13:52.580] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces.
[2023-06-05 15:13:52.956] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:13:53.191] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:13:53.193] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:13:53.195] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:13:53.464] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:13:53.475] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:13:53.476] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:13:53.476] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:13:53.620] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:13:53.620] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 2585 ms
[2023-06-05 15:13:54.179] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:13:54.300] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:13:55.468] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:13:55.468] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:13:55.472] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:13:55.472] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:13:55.666] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:13:55.750] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:13:56.331] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:13:56.973] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:13:56.988] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:13:57.078] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:13:57.106] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:13:57.741] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:13:57.742] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:13:57.935] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:13:57.936] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:13:58.314] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:13:58.330] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:13:58.330] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:13:58.330] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:13:58.330] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:13:58.331] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:13:58.331] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:13:58.331] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:13:58.613] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:13:58.616] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:13:58.618] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:13:58.622] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685949238620 with initial instances count: 2
[2023-06-05 15:13:58.626] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:13:58.626] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949238626, current=UP, previous=STARTING]
[2023-06-05 15:13:58.628] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:13:58.629] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:13:58.651] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:13:58.652] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:13:58.661] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:13:59.255] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 9.785 seconds (JVM running for 10.858)
[2023-06-05 15:14:05.940] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:14:05.940] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:14:05.947] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 6 ms
[2023-06-05 15:14:34.862] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$73f2c1a4.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:14:59.973] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:14:59.973] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949299973, current=DOWN, previous=UP]
[2023-06-05 15:14:59.973] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:14:59.992] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:15:00.224] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:15:00.226] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:15:00.231] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:15:00.350] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:15:03.352] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:15:03.369] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:15:03.377] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:15:09.020] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:15:09.795] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:15:10.360] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:15:10.363] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:15:10.385] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-05 15:15:10.718] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:15:10.905] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:15:10.907] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:15:10.908] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:15:11.187] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:15:11.195] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:15:11.196] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:15:11.196] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:15:11.321] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:15:11.321] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1514 ms
[2023-06-05 15:15:11.694] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:15:11.794] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:15:12.907] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:15:12.907] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:15:12.911] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:15:12.911] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:15:13.099] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:15:13.176] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:15:13.725] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:15:14.343] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:15:14.360] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:15:14.447] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:15:14.476] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:15:14.840] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:15:14.841] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:15:14.939] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:15:14.939] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:15:15.162] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:15:15.177] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:15:15.177] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:15:15.177] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:15:15.177] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:15:15.178] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:15:15.178] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:15:15.178] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:15:15.493] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:15:15.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:15:15.498] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:15:15.501] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685949315501 with initial instances count: 1
[2023-06-05 15:15:15.505] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:15:15.505] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949315505, current=UP, previous=STARTING]
[2023-06-05 15:15:15.507] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:15:15.507] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:15:15.530] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:15:15.531] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:15:15.543] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:15:16.099] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.952 seconds (JVM running for 9.022)
[2023-06-05 15:15:51.482] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:15:51.482] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:15:51.489] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-05 15:16:12.504] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$94604ccb.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:19:47.969] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:19:47.969] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949587969, current=DOWN, previous=UP]
[2023-06-05 15:19:47.969] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:19:47.980] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:19:48.242] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:19:48.244] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:19:48.249] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:19:48.371] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:19:51.385] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:19:51.402] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:19:51.411] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:19:56.750] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:19:57.457] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:19:58.027] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:19:58.030] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:19:58.052] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-05 15:19:58.338] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:19:58.529] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:19:58.531] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:19:58.533] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:19:58.795] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:19:58.803] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:19:58.804] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:19:58.804] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:19:58.919] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:19:58.920] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1451 ms
[2023-06-05 15:19:59.291] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:19:59.392] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:20:00.501] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:20:00.501] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:20:00.505] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:20:00.505] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:20:00.706] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:20:00.797] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:20:01.342] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:20:02.073] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:20:02.091] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:20:02.187] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:20:02.217] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:20:02.583] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:20:02.583] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:20:02.680] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:20:02.681] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:20:02.906] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:20:02.920] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:20:02.920] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:20:02.920] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:20:02.920] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:20:02.920] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:20:02.921] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:20:02.921] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:20:03.224] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:20:03.227] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:20:03.230] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:20:03.234] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685949603233 with initial instances count: 2
[2023-06-05 15:20:03.238] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:20:03.238] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685949603238, current=UP, previous=STARTING]
[2023-06-05 15:20:03.240] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:20:03.241] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:20:03.263] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:20:03.264] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:20:03.279] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:20:03.796] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.859 seconds (JVM running for 8.89)
[2023-06-05 15:20:16.251] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:20:16.251] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:20:16.260] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-05 15:20:17.430] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:20:17.517] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$d38af7da.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:22:23.081] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 125609
[2023-06-05 15:22:23.209] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:24:07.790] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$d38af7da.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:24:19.877] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:24:19.891] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 116652
[2023-06-05 15:24:48.054] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-05 15:24:48.054] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-05 15:24:48.054] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/info/addAddress
[2023-06-05 15:24:48.054] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-05 15:24:48.055] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{userAddressTable=UserAddressTable(addressId=3d91499178ad425690f054b3cbf9664f, addressInfo=江西大学, addressWhere=上海市上海市徐汇区, userId=156a3a438f4f49ddb12aeacf614d4257, createTime=2023-06-05T15:24:19.877, updateTime=2023-06-05T15:24:19.877, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-05 15:24:48.055] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-05 15:24:48.055] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户:-操作-新增地址成功
[2023-06-05 15:24:48.055] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>28184ms
[2023-06-05 15:24:48.055] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-05 15:24:48.058] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:25:02.932] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:26:58.276] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 130194
[2023-06-05 15:27:19.335] [ERROR] com.alibaba.druid.pool.DruidDataSource                      : 2776 - create connection SQLException, url: jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, errorCode 0, state 08S01
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1644)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1710)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2774)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
	... 6 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 9 common frames omitted
[2023-06-05 15:27:19.523] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:27:58.420] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$d38af7da.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:27:58.461] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:27:58.461] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685950078461, current=DOWN, previous=UP]
[2023-06-05 15:27:58.462] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:27:58.482] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:27:58.756] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:27:58.759] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:27:58.762] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:27:58.886] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:28:01.899] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:28:01.914] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:28:01.922] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:28:54.419] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:28:55.174] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:28:55.742] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:28:55.744] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:28:55.769] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
[2023-06-05 15:28:56.006] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:28:56.203] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:28:56.205] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:28:56.206] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:28:56.454] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:28:56.463] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:28:56.463] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:28:56.464] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:28:56.577] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:28:56.578] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1393 ms
[2023-06-05 15:28:56.945] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:28:57.050] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:28:58.184] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:28:58.185] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:28:58.189] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:28:58.189] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:28:58.383] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:28:58.466] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:28:59.052] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:28:59.708] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:28:59.724] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:28:59.814] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:28:59.842] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:29:00.244] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:29:00.244] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:29:00.334] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:29:00.335] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:29:00.546] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:29:00.562] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:29:00.562] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:29:00.562] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:29:00.562] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:29:00.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:29:00.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:29:00.563] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:29:00.845] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:29:00.847] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:29:00.849] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:29:00.853] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685950140852 with initial instances count: 1
[2023-06-05 15:29:00.856] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:29:00.857] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685950140857, current=UP, previous=STARTING]
[2023-06-05 15:29:00.859] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:29:00.860] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:29:00.879] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:29:00.881] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:29:00.906] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:29:01.452] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.873 seconds (JVM running for 8.915)
[2023-06-05 15:29:08.199] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:29:08.199] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:29:08.206] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-05 15:29:15.914] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:29:53.273] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$d0d82aa7.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:29:54.251] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 15:29:54.251] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685950194251, current=DOWN, previous=UP]
[2023-06-05 15:29:54.251] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:29:54.257] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:29:54.590] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:29:54.593] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 15:29:54.598] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 15:29:54.723] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 15:29:57.726] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 15:29:57.741] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - deregister  status: 200
[2023-06-05 15:29:57.747] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-05 15:30:45.706] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-05 15:30:46.444] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-05 15:30:47.009] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-05 15:30:47.011] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-05 15:30:47.035] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-05 15:30:47.276] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=fe935feb-6ee2-3591-8431-86e560a5ba49
[2023-06-05 15:30:47.477] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:30:47.479] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:30:47.481] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-05 15:30:47.767] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-05 15:30:47.774] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:30:47.774] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-05 15:30:47.774] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-05 15:30:47.887] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-05 15:30:47.887] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1430 ms
[2023-06-05 15:30:48.262] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-05 15:30:48.364] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-05 15:30:49.433] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:30:49.434] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:30:49.437] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-05 15:30:49.437] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-05 15:30:49.633] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-05 15:30:49.713] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-05 15:30:50.277] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-05 15:30:50.864] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:30:50.878] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-05 15:30:50.973] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-05 15:30:51.001] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-05 15:30:51.415] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-05 15:30:51.415] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-05 15:30:51.509] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-05 15:30:51.509] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-05 15:30:51.725] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:30:51.739] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-05 15:30:51.739] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-05 15:30:51.739] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-05 15:30:51.740] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-05 15:30:51.740] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-05 15:30:51.740] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-05 15:30:51.740] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-05 15:30:52.035] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-05 15:30:52.038] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-05 15:30:52.040] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-05 15:30:52.043] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1685950252042 with initial instances count: 1
[2023-06-05 15:30:52.047] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-05 15:30:52.048] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685950252048, current=UP, previous=STARTING]
[2023-06-05 15:30:52.050] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 15:30:52.050] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-05 15:30:52.072] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-05 15:30:52.073] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-05 15:30:52.082] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 15:30:52.828] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 7.909 seconds (JVM running for 8.891)
[2023-06-05 15:31:06.185] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-05 15:31:06.185] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-05 15:31:06.192] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-05 15:31:10.647] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-05 15:31:27.251] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Cannot handle (29992) '用'] with root cause
java.lang.IllegalStateException: Cannot handle (29992) '用'
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:268)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:127)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:121)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at com.mc.userserver.config.SysLogAspect.parseExpression(SysLogAspect.java:219)
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:153)
	at com.mc.userserver.config.SysLogAspect.doAfterReturning(SysLogAspect.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterReturningAdvice.afterReturning(AspectJAfterReturningAdvice.java:66)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$e8681eaa.saveVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 15:35:51.745] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:40:51.755] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:45:51.755] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:50:51.766] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 15:55:51.779] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:00:51.781] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:05:51.797] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:10:51.798] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:15:51.810] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:20:51.825] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:25:51.837] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:30:51.841] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:35:51.848] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:40:51.852] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:45:51.866] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:50:51.868] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 16:55:51.874] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 17:00:51.879] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 17:05:51.882] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-05 17:05:59.434] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-05 17:05:59.434] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1685955959434, current=DOWN, previous=UP]
[2023-06-05 17:05:59.435] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080: registering service...
[2023-06-05 17:05:59.449] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - registration status: 204
[2023-06-05 17:05:59.762] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-05 17:05:59.765] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-05 17:05:59.765] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-05 17:05:59.880] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-05 17:06:02.894] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-05 17:06:02.894] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-05 17:06:02.895] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-05 17:06:03.902] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   93 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

[2023-06-05 17:06:03.902] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:03.902] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   93 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

[2023-06-05 17:06:03.902] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:04.956] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   93 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 42 more

[2023-06-05 17:06:04.956] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:05.946] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   84 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 28 more

[2023-06-05 17:06:05.946] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   84 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 more

[2023-06-05 17:06:05.946] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:05.946] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:05.947] [ERROR] com.netflix.discovery.DiscoveryClient                       :  907 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-05 17:06:05.947] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1021 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

[2023-06-05 17:06:06.996] [ INFO] com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient:   84 - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:10023/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 43 more

[2023-06-05 17:06:06.997] [ WARN] com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient:  130 - Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2023-06-05 17:06:06.997] [ERROR] com.netflix.discovery.DiscoveryClient                       :  975 - DiscoveryClient_USER-SERVER/DESKTOP-7O8F3GH:user-server:10080 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:183)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:176)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1092)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1085)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1061)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1030)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:949)
[2023-06-05 17:06:07.005] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
