[2023-06-08 06:56:52.687] [ INFO] com.netflix.discovery.DiscoveryClient                       :  897 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - Re-registering apps/USER-SERVER
[2023-06-08 06:56:52.688] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 06:56:52.705] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 06:58:39.903] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:03:39.909] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:08:39.910] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:13:39.923] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:18:39.925] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:23:39.937] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:28:39.952] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:33:39.954] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:38:39.969] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:43:39.976] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:48:39.978] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:53:39.987] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 07:58:40.001] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:03:40.010] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:08:40.018] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:13:40.031] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:18:40.037] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:23:40.039] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:28:40.040] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:33:40.052] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:38:40.060] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:43:40.076] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:48:40.080] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:53:40.094] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 08:58:40.106] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:03:40.112] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:08:40.118] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:13:40.123] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:18:40.134] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:23:40.146] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:28:40.154] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:33:40.166] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:38:40.171] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:43:40.176] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:48:40.184] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:53:40.191] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 09:58:40.201] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:03:40.217] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:08:40.225] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:12:48.882] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:12:48.884] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190368884, current=DOWN, previous=UP]
[2023-06-08 10:12:48.885] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:12:48.905] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:12:49.159] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:12:49.165] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:12:49.167] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:12:49.319] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:12:52.333] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:12:52.348] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:12:52.359] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:13:07.792] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:13:09.634] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:13:10.527] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:13:10.530] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:13:10.555] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
[2023-06-08 10:13:10.844] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:13:11.079] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:13:11.080] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:13:11.082] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:13:11.401] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:13:11.411] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:13:11.412] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:13:11.412] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:13:11.567] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:13:11.568] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1922 ms
[2023-06-08 10:13:12.027] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:13:12.170] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:13:13.380] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:13:13.380] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:13:13.384] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:13:13.385] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:13:13.610] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:13:13.702] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:13:15.329] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:13:15.372] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:13:16.715] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:13:18.040] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:13:18.069] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:13:18.086] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:13:18.187] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:13:18.221] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:13:18.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:13:18.641] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:13:18.745] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:13:18.745] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:13:18.976] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:13:18.993] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:13:18.993] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:13:18.993] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:13:18.993] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:13:18.994] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:13:18.994] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:13:18.994] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:13:19.318] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:13:19.321] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:13:19.324] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:13:19.328] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686190399328 with initial instances count: 1
[2023-06-08 10:13:19.332] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:13:19.333] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190399332, current=UP, previous=STARTING]
[2023-06-08 10:13:19.335] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:13:19.335] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:13:19.361] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:13:19.362] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:13:19.372] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:13:20.652] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:13:21.934] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:13:21.942] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 16.022 seconds (JVM running for 17.121)
[2023-06-08 10:15:13.395] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:15:13.395] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:15:13.406] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 11 ms
[2023-06-08 10:15:27.225] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:16:39.829] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$9d7991b0.addIntoVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-08 10:17:03.811] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:17:03.830] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 96008
[2023-06-08 10:17:03.949] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/Village/add
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{villageUser=VillageUserTable(id=896533ea0e7e42ca84cd7390995769d4, villageId=0a2588b50b9f4fe486ba109e9a568dcc, userId=156a3a438f4f49ddb12aeacf614d4257, status=null, isAdd=1, villageUserContribute=null, villageUserAppellation=无名小卒, villageUserAppellationDesc=欢迎程度较低，没有太多人知道, createTime=2023-06-08T10:17:03.812, updateTime=2023-06-08T10:17:03.812, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-08 10:17:03.950] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户-操作-加入村庄成功
[2023-06-08 10:17:03.951] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>14810ms
[2023-06-08 10:17:03.951] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-08 10:17:03.954] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:17:05.264] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:17:05.264] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190625264, current=DOWN, previous=UP]
[2023-06-08 10:17:05.264] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:17:05.273] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:17:05.554] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:17:05.557] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:17:05.561] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:17:05.681] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:17:08.696] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:17:08.711] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:17:08.719] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:17:13.853] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:17:15.626] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:17:16.212] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:17:16.215] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:17:16.238] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 10:17:16.489] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:17:16.693] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:17:16.694] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:17:16.696] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:17:16.949] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:17:16.957] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:17:16.958] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:17:16.958] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:17:17.075] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:17:17.075] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1437 ms
[2023-06-08 10:17:17.452] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:17:17.568] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:17:18.735] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:17:18.735] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:17:18.739] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:17:18.739] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:17:18.933] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:17:19.029] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:17:20.607] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:17:20.644] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:17:21.957] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:17:23.268] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:17:23.292] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:17:23.308] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:17:23.398] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:17:23.426] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:17:23.806] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:17:23.806] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:17:23.898] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:17:23.898] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:17:24.117] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:17:24.133] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:17:24.134] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:17:24.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:17:24.421] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:17:24.424] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:17:24.427] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686190644427 with initial instances count: 2
[2023-06-08 10:17:24.433] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:17:24.433] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190644433, current=UP, previous=STARTING]
[2023-06-08 10:17:24.436] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:17:24.436] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:17:24.458] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:17:24.459] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:17:24.476] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:17:25.756] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:17:27.051] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:17:27.059] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.163 seconds (JVM running for 16.32)
[2023-06-08 10:18:32.378] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:18:32.378] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:18:32.386] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 8 ms
[2023-06-08 10:18:43.620] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:19:24.229] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-08 10:19:24.229] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/Village/add
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{villageUser=VillageUserTable(id=88134a675d834223812a00dc1e7ab4eb, villageId=0a2588b50b9f4fe486ba109e9a568dcc, userId=156a3a438f4f49ddb12aeacf614d4257, status=null, isAdd=1, villageUserContribute=null, villageUserAppellation=无名小卒, villageUserAppellationDesc=欢迎程度较低，没有太多人知道, createTime=2023-06-08T10:18:43.638, updateTime=2023-06-08T10:18:43.638, attribute01=null, attribute02=null, attribute03=null, attribute04=null, attribute05=null)}
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户-操作-加入村庄成功
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>51114ms
[2023-06-08 10:19:24.230] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-08 10:19:24.233] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:22:10.758] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:22:10.758] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190930758, current=DOWN, previous=UP]
[2023-06-08 10:22:10.758] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:22:10.783] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:22:11.029] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:22:11.031] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:22:11.035] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:22:11.160] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:22:14.169] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:22:14.184] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:22:14.192] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:22:21.171] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:22:22.916] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:22:23.498] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:22:23.500] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:22:23.523] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 10:22:23.772] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:22:23.972] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:22:23.973] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:22:23.975] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:22:24.230] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:22:24.238] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:22:24.239] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:22:24.239] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:22:24.348] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:22:24.350] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1421 ms
[2023-06-08 10:22:24.731] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:22:24.840] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:22:25.995] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:22:25.996] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:22:26.001] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:22:26.002] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:22:26.200] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:22:26.281] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:22:27.856] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:22:27.893] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:22:29.231] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:22:30.531] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:22:30.554] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:22:30.571] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:22:30.664] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:22:30.692] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:22:31.078] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:22:31.078] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:22:31.173] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:22:31.173] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:22:31.388] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:22:31.404] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:22:31.405] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:22:31.699] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:22:31.701] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:22:31.703] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:22:31.707] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686190951706 with initial instances count: 1
[2023-06-08 10:22:31.710] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:22:31.711] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686190951711, current=UP, previous=STARTING]
[2023-06-08 10:22:31.712] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:22:31.713] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:22:31.736] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:22:31.736] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:22:31.756] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:22:33.060] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:22:34.374] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:22:34.382] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.99 seconds (JVM running for 16.048)
[2023-06-08 10:23:42.214] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:23:42.214] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:23:42.225] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 10 ms
[2023-06-08 10:23:43.113] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/Village/add:costTime: 15msms
[2023-06-08 10:23:43.143] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:27:31.417] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:30:54.270] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:30:54.270] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191454270, current=DOWN, previous=UP]
[2023-06-08 10:30:54.270] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:30:54.352] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:30:54.541] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:30:54.544] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:30:54.549] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:30:54.672] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:30:57.686] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:30:57.702] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:30:57.709] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:31:05.917] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:31:07.692] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:31:08.321] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:31:08.324] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:31:08.347] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 10:31:08.601] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:31:08.799] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:31:08.801] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:31:08.802] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:31:09.059] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:31:09.066] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:31:09.066] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:31:09.067] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:31:09.181] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:31:09.182] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1478 ms
[2023-06-08 10:31:09.564] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:31:09.672] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:31:10.821] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:31:10.821] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:31:10.824] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:31:10.824] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:31:11.025] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:31:11.112] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:31:12.673] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:31:12.708] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:31:14.033] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:31:15.320] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:31:15.342] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:31:15.357] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:31:15.445] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:31:15.473] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:31:15.830] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:31:15.831] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:31:15.922] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:31:15.922] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:31:16.131] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:31:16.145] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:31:16.145] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:31:16.145] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:31:16.145] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:31:16.145] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:31:16.146] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:31:16.146] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:31:16.427] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:31:16.430] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:31:16.433] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:31:16.436] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686191476435 with initial instances count: 1
[2023-06-08 10:31:16.440] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:31:16.440] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191476440, current=UP, previous=STARTING]
[2023-06-08 10:31:16.442] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:31:16.442] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:31:16.462] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:31:16.462] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:31:16.480] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:31:17.778] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:31:19.085] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:31:19.093] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.997 seconds (JVM running for 16.182)
[2023-06-08 10:33:32.062] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:33:32.062] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:33:32.072] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 10 ms
[2023-06-08 10:34:05.080] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$3b41316e.addIntoVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-08 10:34:37.227] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:34:37.227] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191677227, current=DOWN, previous=UP]
[2023-06-08 10:34:37.228] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:34:37.243] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:34:37.499] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:34:37.502] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:34:37.506] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:34:37.636] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:34:40.647] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:34:40.663] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:34:40.671] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:34:47.656] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:34:49.430] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:34:50.000] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:34:50.002] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:34:50.026] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
[2023-06-08 10:34:50.270] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:34:50.472] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:34:50.474] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:34:50.476] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:34:50.731] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:34:50.738] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:34:50.739] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:34:50.739] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:34:50.856] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:34:50.856] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1414 ms
[2023-06-08 10:34:51.238] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:34:51.350] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:34:52.513] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:34:52.514] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:34:52.518] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:34:52.518] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:34:52.707] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:34:52.795] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:34:54.359] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:34:54.396] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:34:55.730] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:34:57.082] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:34:57.107] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:34:57.125] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:34:57.215] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:34:57.243] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:34:57.629] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:34:57.629] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:34:57.723] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:34:57.724] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:34:57.940] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:34:57.955] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:34:57.956] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:34:58.254] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:34:58.257] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:34:58.259] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:34:58.262] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686191698261 with initial instances count: 2
[2023-06-08 10:34:58.266] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:34:58.266] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191698266, current=UP, previous=STARTING]
[2023-06-08 10:34:58.268] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:34:58.268] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:34:58.291] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:34:58.293] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:34:58.309] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:34:59.588] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:35:00.869] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:35:00.876] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.037 seconds (JVM running for 16.158)
[2023-06-08 10:35:07.834] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:35:07.835] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:35:07.844] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 9 ms
[2023-06-08 10:35:23.560] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$6bed4084.addIntoVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-08 10:36:30.208] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:36:30.209] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191790209, current=DOWN, previous=UP]
[2023-06-08 10:36:30.209] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:36:30.233] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:36:30.486] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:36:30.488] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:36:30.493] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:36:30.617] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:36:33.634] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:36:33.650] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:36:33.657] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:36:41.039] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:36:42.790] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:36:43.356] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:36:43.358] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:36:43.381] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-08 10:36:43.669] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:36:43.868] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:36:43.870] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:36:43.871] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:36:44.125] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:36:44.132] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:36:44.133] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:36:44.133] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:36:44.245] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:36:44.245] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1443 ms
[2023-06-08 10:36:44.616] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:36:44.728] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:36:45.892] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:36:45.892] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:36:45.897] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:36:45.897] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:36:46.094] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:36:46.178] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:36:47.732] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:36:47.786] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:36:49.095] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:36:50.377] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:36:50.403] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:36:50.417] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:36:50.511] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:36:50.540] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:36:50.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:36:50.905] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:36:51.002] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:36:51.003] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:36:51.215] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:36:51.231] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:36:51.231] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:36:51.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:36:51.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:36:51.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:36:51.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:36:51.232] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:36:51.538] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:36:51.540] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:36:51.542] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:36:51.545] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686191811544 with initial instances count: 2
[2023-06-08 10:36:51.549] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:36:51.549] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686191811549, current=UP, previous=STARTING]
[2023-06-08 10:36:51.551] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:36:51.552] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:36:51.575] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:36:51.576] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:36:51.586] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:36:52.873] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:36:54.176] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:36:54.184] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.94 seconds (JVM running for 16.021)
[2023-06-08 10:37:08.995] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:37:08.995] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:37:09.006] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 11 ms
[2023-06-08 10:37:32.575] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:37:32.609] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/Village/add
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{data={villageId=0a2588b50b9f4fe486ba109e9a568dcc, userId=156a3a438f4f49ddb12aeacf614d4257, isAdd=1}}
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-08 10:37:32.610] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户-操作-加入村庄成功
[2023-06-08 10:37:32.611] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>22675ms
[2023-06-08 10:37:32.611] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-08 10:37:32.614] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:37:43.599] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/Village/add:costTime: 3606msms
[2023-06-08 10:37:43.600] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:37:55.175] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/Village/add:costTime: 9msms
[2023-06-08 10:37:55.176] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:40:31.075] [ERROR] com.alibaba.druid.pool.DruidAbstractDataSource              : 1481 - discard long time none received connection. , jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, jdbcUrl : jdbc:mysql://121.5.151.112:3306/ang?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true, lastPacketReceivedIdleMillis : 155873
[2023-06-08 10:40:31.182] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/Village/add:costTime: 125msms
[2023-06-08 10:40:31.183] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:41:51.241] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:46:40.316] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:46:40.316] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686192400316, current=DOWN, previous=UP]
[2023-06-08 10:46:40.317] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:46:40.327] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:46:40.538] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:46:40.541] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:46:40.543] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:46:40.667] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:46:43.670] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:46:43.685] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:46:43.693] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:47:07.460] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:47:09.202] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:47:09.819] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:47:09.821] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:47:09.843] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 10:47:10.098] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:47:10.300] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:47:10.301] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:47:10.303] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:47:10.565] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:47:10.572] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:47:10.573] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:47:10.573] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:47:10.692] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:47:10.692] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1478 ms
[2023-06-08 10:47:11.078] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:47:11.194] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:47:12.378] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:47:12.378] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:47:12.383] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:47:12.383] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:47:12.585] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:47:12.669] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:47:14.246] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:47:14.282] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:47:15.607] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:47:16.921] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:47:16.947] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:47:16.964] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:47:17.058] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:47:17.084] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:47:17.431] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:47:17.431] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:47:17.526] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:47:17.527] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:47:17.744] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:47:17.759] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:47:17.759] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:47:17.760] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:47:17.760] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:47:17.760] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:47:17.760] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:47:17.760] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:47:18.065] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:47:18.067] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:47:18.069] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:47:18.073] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686192438072 with initial instances count: 1
[2023-06-08 10:47:18.077] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:47:18.078] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686192438078, current=UP, previous=STARTING]
[2023-06-08 10:47:18.080] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:47:18.081] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:47:18.106] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:47:18.107] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:47:18.129] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:47:19.415] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:47:20.752] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:47:20.759] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.108 seconds (JVM running for 16.184)
[2023-06-08 10:48:09.636] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:48:09.636] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686192489636, current=DOWN, previous=UP]
[2023-06-08 10:48:09.636] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:48:09.640] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:48:09.890] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:48:09.892] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:48:09.894] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:48:09.913] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:48:12.926] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:48:12.943] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:48:12.951] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:48:21.223] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:48:22.945] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:48:23.497] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:48:23.499] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:48:23.520] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
[2023-06-08 10:48:23.758] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:48:23.958] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:48:23.959] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:48:23.962] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:48:24.228] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:48:24.237] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:48:24.237] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:48:24.237] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:48:24.350] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:48:24.351] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1395 ms
[2023-06-08 10:48:24.725] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:48:24.834] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:48:25.972] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:48:25.972] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:48:25.976] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:48:25.976] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:48:26.177] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:48:26.264] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:48:27.828] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:48:27.868] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:48:29.231] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:48:30.556] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:48:30.581] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:48:30.598] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:48:30.692] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:48:30.721] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:48:31.092] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:48:31.093] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:48:31.184] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:48:31.184] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:48:31.403] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:48:31.417] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:48:31.418] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:48:31.730] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:48:31.733] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:48:31.736] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:48:31.739] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686192511738 with initial instances count: 1
[2023-06-08 10:48:31.742] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:48:31.743] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686192511743, current=UP, previous=STARTING]
[2023-06-08 10:48:31.745] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:48:31.745] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:48:31.770] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:48:31.771] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:48:31.780] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:48:33.076] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:48:34.358] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:48:34.366] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.99 seconds (JVM running for 16.111)
[2023-06-08 10:53:31.434] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:57:45.496] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 10:57:45.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193065496, current=DOWN, previous=UP]
[2023-06-08 10:57:45.496] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:57:45.509] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:57:45.761] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:57:45.764] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 10:57:45.765] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 10:57:45.783] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 10:57:48.800] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 10:57:48.817] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 10:57:48.825] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 10:57:55.452] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 10:57:57.227] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 10:57:57.803] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 10:57:57.806] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 10:57:57.829] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-08 10:57:58.079] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 10:57:58.285] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:57:58.287] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:57:58.289] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 10:57:58.544] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 10:57:58.552] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:57:58.552] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 10:57:58.552] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 10:57:58.668] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 10:57:58.668] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1428 ms
[2023-06-08 10:57:59.060] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 10:57:59.173] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 10:58:00.295] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:58:00.296] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:58:00.300] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 10:58:00.300] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 10:58:00.493] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 10:58:00.578] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 10:58:02.147] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:58:02.201] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 10:58:03.504] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:58:04.806] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:58:04.834] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:58:04.849] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 10:58:04.938] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 10:58:04.967] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 10:58:05.331] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 10:58:05.332] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 10:58:05.424] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 10:58:05.424] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 10:58:05.638] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 10:58:05.654] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 10:58:05.654] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 10:58:05.654] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 10:58:05.655] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 10:58:05.655] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 10:58:05.655] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 10:58:05.655] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 10:58:05.960] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 10:58:05.962] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 10:58:05.965] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 10:58:05.968] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686193085967 with initial instances count: 1
[2023-06-08 10:58:05.971] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 10:58:05.972] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193085972, current=UP, previous=STARTING]
[2023-06-08 10:58:05.974] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 10:58:05.975] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 10:58:06.000] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 10:58:06.001] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 10:58:06.013] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 10:58:07.297] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:58:08.588] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 10:58:08.596] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.947 seconds (JVM running for 15.97)
[2023-06-08 10:58:51.863] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 10:58:51.863] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 10:58:51.874] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 11 ms
[2023-06-08 10:58:52.956] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 10:58:53.072] [ERROR] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:  175 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.mc.userserver.config.SysLogAspect.printLog(SysLogAspect.java:140)
	at com.mc.userserver.config.SysLogAspect.doAfterThrowing(SysLogAspect.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.mc.userserver.controller.VillageController$$EnhancerBySpringCGLIB$$6ceb54b6.addIntoVillage(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[2023-06-08 11:03:05.664] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:04:38.422] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 11:04:38.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193478422, current=DOWN, previous=UP]
[2023-06-08 11:04:38.422] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:04:38.426] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:04:38.675] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:04:38.678] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 11:04:38.682] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 11:04:38.820] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 11:04:41.834] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 11:04:41.849] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 11:04:41.857] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 11:04:49.033] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 11:04:50.792] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 11:04:51.378] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 11:04:51.380] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 11:04:51.404] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 11:04:51.701] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 11:04:51.962] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:04:51.964] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:04:51.966] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:04:52.224] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 11:04:52.232] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:04:52.232] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 11:04:52.232] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 11:04:52.347] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 11:04:52.347] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1543 ms
[2023-06-08 11:04:52.728] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 11:04:52.837] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 11:04:54.092] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:04:54.092] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:04:54.095] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:04:54.095] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:04:54.295] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:04:54.381] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 11:04:55.945] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:04:55.995] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 11:04:57.322] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:04:58.624] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:04:58.649] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:04:58.663] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:04:58.745] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 11:04:58.774] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 11:04:59.111] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 11:04:59.111] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 11:04:59.200] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 11:04:59.200] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 11:04:59.408] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:04:59.421] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 11:04:59.421] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 11:04:59.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 11:04:59.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 11:04:59.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 11:04:59.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 11:04:59.422] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 11:04:59.721] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 11:04:59.723] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 11:04:59.725] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 11:04:59.728] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686193499727 with initial instances count: 2
[2023-06-08 11:04:59.731] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 11:04:59.732] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193499732, current=UP, previous=STARTING]
[2023-06-08 11:04:59.733] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:04:59.734] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:04:59.753] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 11:04:59.755] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 11:04:59.779] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:05:01.054] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:02.322] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:02.331] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.074 seconds (JVM running for 16.27)
[2023-06-08 11:05:06.073] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 11:05:06.073] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 11:05:06.080] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-08 11:05:07.215] [ INFO] com.mc.userserver.config.SysLogAspect                       :  242 - http://localhost:10080/Village/add:costTime: 309msms
[2023-06-08 11:05:07.222] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 11:05:34.522] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 11:05:34.522] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193534522, current=DOWN, previous=UP]
[2023-06-08 11:05:34.523] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:05:34.528] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:05:34.784] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:05:34.787] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 11:05:34.792] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 11:05:34.922] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 11:05:37.925] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 11:05:37.941] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 11:05:37.949] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 11:05:46.412] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 11:05:48.184] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 11:05:48.764] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 11:05:48.767] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 11:05:48.794] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-08 11:05:49.068] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 11:05:49.273] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:05:49.275] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:05:49.277] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:05:49.538] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 11:05:49.545] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:05:49.546] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 11:05:49.546] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 11:05:49.664] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 11:05:49.664] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1467 ms
[2023-06-08 11:05:50.042] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 11:05:50.145] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 11:05:51.294] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:05:51.294] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:05:51.298] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:05:51.299] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:05:51.495] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:05:51.580] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 11:05:53.178] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:53.219] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 11:05:54.529] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:55.828] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:55.853] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:05:55.868] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:05:55.960] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 11:05:55.991] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 11:05:56.343] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 11:05:56.344] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 11:05:56.437] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 11:05:56.438] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 11:05:56.659] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:05:56.673] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 11:05:56.673] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 11:05:56.673] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 11:05:56.674] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 11:05:56.674] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 11:05:56.674] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 11:05:56.674] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 11:05:56.969] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 11:05:56.972] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 11:05:56.974] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 11:05:56.979] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686193556978 with initial instances count: 2
[2023-06-08 11:05:56.983] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 11:05:56.983] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193556983, current=UP, previous=STARTING]
[2023-06-08 11:05:56.986] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:05:56.986] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:05:57.012] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 11:05:57.013] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 11:05:57.022] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:05:58.305] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:59.585] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:05:59.593] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 15.554 seconds (JVM running for 16.905)
[2023-06-08 11:06:12.652] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 11:06:12.652] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 11:06:12.659] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 7 ms
[2023-06-08 11:06:13.817] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/Village/add
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{data={villageId=0a2588b50b9f4fe486ba109e9a568dcc, userId=156a3a438f4f49ddb12aeacf614d4257, isAdd=1}}
[2023-06-08 11:06:13.906] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-08 11:06:13.907] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户-操作-加入村庄成功
[2023-06-08 11:06:13.907] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>412ms
[2023-06-08 11:06:13.907] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-08 11:06:13.910] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 11:06:56.390] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 11:06:56.391] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193616391, current=DOWN, previous=UP]
[2023-06-08 11:06:56.391] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:06:56.398] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:06:56.691] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:06:56.694] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 11:06:56.698] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 11:06:56.827] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 11:06:59.832] [ WARN] com.netflix.discovery.TimedSupervisorTask                   :   90 - task supervisor shutting down, can't accept the task
[2023-06-08 11:06:59.833] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 11:06:59.848] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 11:06:59.856] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 11:07:06.930] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 11:07:08.687] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 11:07:09.261] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 11:07:09.263] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 11:07:09.288] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
[2023-06-08 11:07:09.534] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 11:07:09.737] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:07:09.738] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:07:09.740] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:07:09.987] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 11:07:09.995] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:07:09.995] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 11:07:09.996] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 11:07:10.105] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 11:07:10.106] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1408 ms
[2023-06-08 11:07:10.464] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 11:07:10.570] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 11:07:11.601] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:07:11.601] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:07:11.605] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:07:11.606] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:07:11.798] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:07:11.881] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 11:07:13.402] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:07:13.438] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 11:07:14.745] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:07:16.019] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:07:16.044] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:07:16.059] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:07:16.149] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 11:07:16.178] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 11:07:16.517] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 11:07:16.517] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 11:07:16.611] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 11:07:16.611] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 11:07:16.826] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:07:16.840] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 11:07:16.841] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 11:07:17.138] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 11:07:17.140] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 11:07:17.142] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 11:07:17.145] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686193637144 with initial instances count: 1
[2023-06-08 11:07:17.149] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 11:07:17.150] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193637150, current=UP, previous=STARTING]
[2023-06-08 11:07:17.152] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:07:17.152] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:07:17.174] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 11:07:17.174] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 11:07:17.201] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:07:18.439] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:07:19.708] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:07:19.716] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.544 seconds (JVM running for 15.639)
[2023-06-08 11:07:25.078] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2023-06-08 11:07:25.078] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  525 - Initializing Servlet 'dispatcherServlet'
[2023-06-08 11:07:25.088] [ INFO] org.springframework.web.servlet.DispatcherServlet           :  547 - Completed initialization in 10 ms
[2023-06-08 11:07:27.273] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 11:07:27.353] [ INFO] com.mc.userserver.config.SysLogAspect                       :  232 - <=====================================================
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  233 - 请求来源： =》127.0.0.1
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  234 - 请求URL：=》http://localhost:10080/Village/add
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  235 - 操作设备：=》ApiPOST Runtime +https://www.apipost.cn
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  236 - 请求参数：=》{data={villageId=0a2588b50b9f4fe486ba109e9a568dcc, userId=156a3a438f4f49ddb12aeacf614d4257, isAdd=1}}
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  237 - 返回数据：=》200
[2023-06-08 11:07:27.354] [ INFO] com.mc.userserver.config.SysLogAspect                       :  238 - 执行描述：=》用户-操作-加入村庄成功
[2023-06-08 11:07:27.355] [ INFO] com.mc.userserver.config.SysLogAspect                       :  239 - costTime: {}ms =>1418ms
[2023-06-08 11:07:27.355] [ INFO] com.mc.userserver.config.SysLogAspect                       :  240 - ------------------------------------------------------
[2023-06-08 11:07:27.358] [ INFO] com.mc.common.utils.MyMetaObjecthandler                     :   19 - 公共字段自动填充[insert]...
[2023-06-08 11:07:56.496] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   65 - Unregistering application USER-SERVER with eureka with status DOWN
[2023-06-08 11:07:56.496] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193676496, current=DOWN, previous=UP]
[2023-06-08 11:07:56.497] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:07:56.519] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:07:56.787] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  218 - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:07:56.790] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2024 - {dataSource-1} closing ...
[2023-06-08 11:07:56.796] [ INFO] com.alibaba.druid.pool.DruidDataSource                      : 2096 - {dataSource-1} closed
[2023-06-08 11:07:56.922] [ INFO] com.netflix.discovery.DiscoveryClient                       :  935 - Shutting down DiscoveryClient ...
[2023-06-08 11:07:59.931] [ INFO] com.netflix.discovery.DiscoveryClient                       :  971 - Unregistering ...
[2023-06-08 11:07:59.946] [ INFO] com.netflix.discovery.DiscoveryClient                       :  973 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - deregister  status: 200
[2023-06-08 11:07:59.958] [ INFO] com.netflix.discovery.DiscoveryClient                       :  960 - Completed shut down of DiscoveryClient
[2023-06-08 11:08:06.879] [ INFO] org.hibernate.validator.internal.util.Version               :   21 - HV000001: Hibernate Validator 6.1.7.Final
[2023-06-08 11:08:08.641] [ INFO] com.mc.userserver.UserServerApplication                     :  648 - No active profile set, falling back to default profiles: default
[2023-06-08 11:08:09.207] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  249 - Multiple Spring Data modules found, entering strict repository configuration mode!
[2023-06-08 11:08:09.209] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
[2023-06-08 11:08:09.234] [ INFO] org.springframework.data.repository.config.RepositoryConfigurationDelegate:  187 - Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
[2023-06-08 11:08:09.477] [ INFO] org.springframework.cloud.context.scope.GenericScope        :  295 - BeanFactory id=ffdff769-0e92-3833-9d54-748daa22936f
[2023-06-08 11:08:09.678] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:08:09.679] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactiveLoadBalancerConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:08:09.681] [ INFO] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:  335 - Bean 'deferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2023-06-08 11:08:09.930] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  108 - Tomcat initialized with port(s): 10080 (http)
[2023-06-08 11:08:09.937] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Initializing ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:08:09.938] [ INFO] org.apache.catalina.core.StandardService                    :  173 - Starting service [Tomcat]
[2023-06-08 11:08:09.938] [ INFO] org.apache.catalina.core.StandardEngine                     :  173 - Starting Servlet engine: [Apache Tomcat/9.0.46]
[2023-06-08 11:08:10.055] [ INFO] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:  173 - Initializing Spring embedded WebApplicationContext
[2023-06-08 11:08:10.055] [ INFO] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:  285 - Root WebApplicationContext: initialization completed in 1400 ms
[2023-06-08 11:08:10.428] [ INFO] com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure:   56 - Init DruidDataSource
[2023-06-08 11:08:10.544] [ INFO] com.alibaba.druid.pool.DruidDataSource                      :  983 - {dataSource-1} inited
[2023-06-08 11:08:11.683] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:08:11.684] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:08:11.687] [ WARN] com.netflix.config.sources.URLConfigurationSource           :  126 - No URLs will be polled as dynamic configuration sources.
[2023-06-08 11:08:11.688] [ INFO] com.netflix.config.sources.URLConfigurationSource           :  127 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2023-06-08 11:08:11.882] [ INFO] org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor:  181 - Initializing ExecutorService 'applicationTaskExecutor'
[2023-06-08 11:08:11.968] [ INFO] org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping:   53 - Adding welcome page: class path resource [static/index.html]
[2023-06-08 11:08:13.520] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:08:13.558] [ INFO] org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration:   78 - Eureka HTTP Client uses Jersey
[2023-06-08 11:08:14.883] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:08:16.192] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:08:16.216] [ WARN] org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:  106 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:08:16.233] [ WARN] org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration$ReactorLoadBalancerClientRibbonWarnLogger:   83 - You have RibbonLoadBalancerClient on your classpath. LoadBalancerExchangeFilterFunction that uses it under the hood will be used by default. Spring Cloud Ribbon is now in maintenance mode, so we suggest switching to ReactorLoadBalancerExchangeFilterFunction instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2023-06-08 11:08:16.324] [ INFO] org.springframework.cloud.netflix.eureka.InstanceInfoFactory:   72 - Setting initial instance status as: STARTING
[2023-06-08 11:08:16.352] [ INFO] com.netflix.discovery.DiscoveryClient                       :  372 - Initializing Eureka in region us-east-1
[2023-06-08 11:08:16.751] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   70 - Using JSON encoding codec LegacyJacksonJson
[2023-06-08 11:08:16.752] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   71 - Using JSON decoding codec LegacyJacksonJson
[2023-06-08 11:08:16.844] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   80 - Using XML encoding codec XStreamXml
[2023-06-08 11:08:16.844] [ INFO] com.netflix.discovery.provider.DiscoveryJerseyProvider      :   81 - Using XML decoding codec XStreamXml
[2023-06-08 11:08:17.084] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1007 - Disable delta property : false
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1008 - Single vip registry refresh property : null
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1009 - Force full registry fetch : false
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1010 - Application is null : false
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1011 - Registered Applications size is zero : true
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1013 - Application version is -1: true
[2023-06-08 11:08:17.100] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1097 - Getting all instance registry info from the eureka server
[2023-06-08 11:08:17.388] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1106 - The response status is 200
[2023-06-08 11:08:17.392] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1321 - Starting heartbeat executor: renew interval is: 30
[2023-06-08 11:08:17.394] [ INFO] com.netflix.discovery.InstanceInfoReplicator                :   60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2023-06-08 11:08:17.398] [ INFO] com.netflix.discovery.DiscoveryClient                       :  492 - Discovery Client initialized at timestamp 1686193697397 with initial instances count: 1
[2023-06-08 11:08:17.402] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:   41 - Registering application USER-SERVER with eureka with status UP
[2023-06-08 11:08:17.402] [ INFO] com.netflix.discovery.DiscoveryClient                       : 1352 - Saw local status change event StatusChangeEvent [timestamp=1686193697402, current=UP, previous=STARTING]
[2023-06-08 11:08:17.405] [ INFO] com.netflix.discovery.DiscoveryClient                       :  873 - DiscoveryClient_USER-SERVER/localhost:user-server:10080: registering service...
[2023-06-08 11:08:17.405] [ INFO] org.apache.coyote.http11.Http11NioProtocol                  :  173 - Starting ProtocolHandler ["http-nio-10080"]
[2023-06-08 11:08:17.426] [ INFO] org.springframework.boot.web.embedded.tomcat.TomcatWebServer:  220 - Tomcat started on port(s): 10080 (http) with context path ''
[2023-06-08 11:08:17.427] [ INFO] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:  145 - Updating port to 10080
[2023-06-08 11:08:17.447] [ INFO] com.netflix.discovery.DiscoveryClient                       :  882 - DiscoveryClient_USER-SERVER/localhost:user-server:10080 - registration status: 204
[2023-06-08 11:08:18.713] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:08:19.980] [ INFO] org.springframework.cloud.commons.util.InetUtils            :  170 - Cannot determine local hostname
[2023-06-08 11:08:19.989] [ INFO] com.mc.userserver.UserServerApplication                     :   61 - Started UserServerApplication in 14.911 seconds (JVM running for 16.059)
[2023-06-08 11:13:17.112] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:18:17.127] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:23:17.136] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:28:17.151] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:33:17.160] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:38:17.167] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:43:17.173] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:48:17.181] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:53:17.196] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 11:58:17.198] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:03:17.203] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:08:17.218] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:13:17.228] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:18:17.240] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:23:17.246] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:28:17.249] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:33:17.263] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:38:17.266] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:43:17.274] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:48:17.278] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:53:17.285] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 12:58:17.291] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:03:17.292] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:08:17.303] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:13:17.304] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:18:17.316] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:23:17.331] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:28:17.332] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:33:17.336] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:38:17.342] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:43:17.349] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:48:17.356] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:53:17.358] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 13:58:17.368] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:03:17.373] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:08:17.382] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:13:17.388] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:18:17.396] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:23:17.398] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:28:17.410] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:33:17.415] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:38:17.426] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:43:17.429] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:48:17.441] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:53:17.455] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 14:58:17.457] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:03:17.472] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:08:17.476] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:13:17.487] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:18:17.500] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:23:17.508] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:28:17.514] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:33:17.517] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:38:17.529] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:43:17.535] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:48:17.541] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:53:17.545] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 15:58:17.555] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:03:17.564] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:08:17.573] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:13:17.577] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:18:17.582] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:23:17.588] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:28:17.592] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:33:17.596] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:38:17.600] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:43:17.614] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:48:17.616] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:53:17.618] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 16:58:17.619] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:03:17.629] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:08:17.636] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:13:17.644] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:18:17.651] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:23:17.652] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:28:17.666] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:33:17.672] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:38:17.681] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:43:17.688] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:48:17.696] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:53:17.710] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 17:58:17.725] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:03:17.729] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:08:17.738] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:13:17.744] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:18:17.754] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:23:17.755] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:28:17.759] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:33:17.764] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:38:17.768] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:43:17.769] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:48:17.778] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:53:17.785] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 18:58:17.798] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:03:17.810] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:08:17.826] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:13:17.835] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:18:17.844] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:23:17.854] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:28:17.856] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:33:17.863] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:38:17.872] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:43:17.882] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:48:17.894] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:53:17.897] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 19:58:17.906] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:03:17.912] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:08:17.914] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:13:17.926] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:18:17.940] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:23:17.954] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:28:17.958] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:33:17.960] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:38:17.962] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:43:17.975] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:48:17.980] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:53:17.988] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 20:58:17.989] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:03:17.998] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:08:18.012] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:13:18.025] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:18:18.032] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:23:18.034] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:28:18.050] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:33:18.058] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:38:18.060] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:43:18.075] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:48:18.082] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:53:18.094] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 21:58:18.098] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:03:18.105] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:08:18.117] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:13:18.120] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:18:18.132] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:23:18.135] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:28:18.144] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:33:18.145] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:38:18.146] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:43:18.154] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:48:18.157] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:53:18.159] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 22:58:18.168] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 23:03:18.183] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 23:08:18.188] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
[2023-06-08 23:13:18.191] [ INFO] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:   43 - Resolving eureka endpoints via configuration
